[
    {
        "level": "#",
        "title": "Strategic Network Creation For Enabling Greedy Routing",
        "content": "\nJULIAN BERGER, Hasso Plattner Institute, University of Potsdam, Potsdam, Germany TOBIAS FRIEDRICH, Hasso Plattner Institute, University of Potsdam, Potsdam, Germany PASCAL LENZNER, Hasso Plattner Institute, University of Potsdam, Potsdam, Germany PARASKEVI MACHAIRA, Hasso Plattner Institute, University of Potsdam, Potsdam, Germany JANOSCH RUFF, Hasso Plattner Institute, University of Potsdam, Potsdam, Germany In this paper, we present the first game-theoretic network creation model that incorporates greedy routing, i.e., the agents in our model are embedded in some metric space and strive for creating a network where all-pairs greedy routing is enabled. In contrast to graph-theoretic shortest paths, our agents route their traffic along greedy paths, which are sequences of nodes where the distance in the metric space to the respective target node gets strictly smaller by each hop. Besides enabling greedy routing, the agents also optimize their connection quality within the created network by constructing greedy paths with low stretch. This ensures that greedy routing is always possible in equilibrium networks, while realistically modeling the agents' incentives for local structural changes to the network. With this we augment the elegant network creation model by Moscibroda, Schmidt, and Wattenhofer (PODC'06, [43]) with the feature of greedy routing.\n\nFor our model, we analyze the existence of (approximate)-equilibria and the computational hardness in different underlying metric spaces. E.g., we characterize the set of equilibria in 1-2-metrics and tree metrics, we show that in both metrics Nash equilibria always exist, and we prove that the well-known \u0398-graph construction yields constant-approximate Nash equilibria in Euclidean space. The latter justifies distributed network construction via \u0398-graphs from a new point-of-view, since it shows that this powerful technique not only guarantees networks having a low stretch but also networks that are almost stable.\n\nCCS Concepts: - Computer systems organization \u2192 **Embedded systems**; *Redundancy*; Robotics; - Networks \u2192 Network reliability.\n\nAdditional Key Words and Phrases: Network Creation Games, Greedy Routing, Nash Equilibrium, Stretch, Theta-Graphs, Metric Space, Ad-Hoc Networks, Peer-to-Peer Networks\n1\nINTRODUCTION\nMany important real-world networks, like the Internet or peer-to-peer ad-hoc networks among smart devices, are created by the decentralized interaction of various agents that pursue their own goals, like maximizing their centrality in the network, minimizing their latency, or maximizing the network throughput. These agents can thus be considered as acting selfishly and strategic, i.e., they individually try to optimize their costs for creating and using the network. This observation sparked a whole research area devoted to game-theoretic network formation models [45] and there is an abundance of interesting variants, typically called *network creation games*, that capture how networks emerge in different domains, e.g., communication networks or social networks.\n\nAcross various domains, the common purpose of networks is to enable communication between all the participants of the network. To this end, it is commonly assumed that shortest paths are used for routing traffic within the created network. However, to make this work, all agents need to know the global structure of the network. Moreover, in case of dynamic changes to the network, this global view must be updated or otherwise shortest path routing would fail. In case of the Internet, shortest path routing is currently ensured by the usage of extensive routing tables, that exactly specify which next-hop neighbor to use for which destination. All these routing tables must be ruff@hpi.de, Hasso Plattner Institute, University of Potsdam, Potsdam, Germany.\n\nmaintained and updated accordingly, even for insignificant changes in the network structure. A\nsolution to avoid the costly maintenance of such a global view is the usage of *greedy routing*, where in every network node every incoming packet is simply routed to a neighbor that is closer to the packet's destination. For this, geographic information is needed, e.g., every network node must be embedded in some underlying metric space and the positions in that space allow for deciding which next hop to use for routing. Exactly this has been proposed for the Internet [12], i.e., to map the nodes of the Internet into a metric space such that greedy routing works. This is called a greedy embedding and efficient algorithms have been proposed for computing them [10].\n\nHowever, centrally computing a greedy embedding of network nodes does not account for the selfish strategic behavior of the network participants. The agents do not only want to ensure that greedy routing works, but at the same time they want to maximize their connection quality within the network, e.g., they want to minimize their average *stretch*. For two nodes, their stretch is the ratio of the length of their distance in the network and their distance in the metric space, i.e., their shortest possible distance. Thus, strategic agents would \"rewire\" a given greedy embedding, if this reduces their stretch. However, this might endanger greedy routing.\n\nIn this paper, we set out to investigate this tension between the stability of the network with respect to local structural changes by the agents and maintaining that greedy routing can be used.\n"
    },
    {
        "level": "##",
        "title": "1.1 Model And Preliminaries",
        "content": "\nWe consider\ud835\udc5b agents that correspond to points P = {\ud835\udc5d1*, . . . , \ud835\udc5d*\ud835\udc5b} in some metric space M = (P,\ud835\udc51M), where \ud835\udc51M(*\ud835\udc62, \ud835\udc63*) denotes the distance of \ud835\udc62 \u2208 P and \ud835\udc63 \u2208 P in the metric space. Besides arbitrary metric spaces where \ud835\udc51M has to satisfy the triangle inequality, we will also consider *1-2-metrics*, where \ud835\udc51M(*\ud835\udc62, \ud835\udc63*) \u2208 {1, 2} for any *\ud835\udc62, \ud835\udc63* \u2208 P, *tree-metrics*, where the distances are determined by a given weighted spanning tree \ud835\udc47, such that \ud835\udc51M(\ud835\udc62, \ud835\udc63) = \ud835\udc51\ud835\udc47 (*\ud835\udc62, \ud835\udc63*), i.e., the distance between points\n\ud835\udc62, \ud835\udc63 \u2208 P is the length of the unique path between \ud835\udc62 and \ud835\udc63 in \ud835\udc47, and the *Euclidean-metric*, where the points are located in Euclidean space and the distance is the Euclidean distance. We will omit the reference to the metric space M if it is clear from the context.\n\nThe goal of the agents is to create a directed network among themselves and for this each agent strategically decides over its set of outgoing directed edges. The *strategy of agent* \ud835\udc62 is \ud835\udc46\ud835\udc62 \u2286 \ud835\udc49 \\ {\ud835\udc62}, i.e., agent\ud835\udc62 can decide to create edges to any subset of the other agents. Moreover, let s = (\ud835\udc461*, . . . ,\ud835\udc46*\ud835\udc5b)\ndenote the *strategy-profile*, which is the vector of strategies of all agents. As shorthand notation, for any agent \ud835\udc62 \u2208 \ud835\udc49 let s = (\ud835\udc46\ud835\udc62, s\u2212\ud835\udc62), where s\u2212\ud835\udc62 is the vector of strategies of all agents except agent \ud835\udc62.\n\nAny strategy-profile s uniquely defines a directed weighted network \ud835\udc3a(s) = (P, \ud835\udc38(s), \u2113), where the edge-set \ud835\udc38(s) is defined as \ud835\udc38(s) = \ufffd\n\ud835\udc62\u2208\ud835\udc49 {(*\ud835\udc62, \ud835\udc63*) | \ud835\udc63 \u2208 \ud835\udc46\ud835\udc62} and the length of any edge (*\ud835\udc62, \ud835\udc63*) \u2208 \ud835\udc38(s) is equal to the distance of the positions of its endpoints in M, i.e., it is defined as \u2113(\ud835\udc62, \ud835\udc63) = \ud835\udc51M(*\ud835\udc62, \ud835\udc63*).\n\nGiven a weighted directed network \ud835\udc3a = (P*, \ud835\udc38, \u2113*), where the nodes in P are points in metric space M, a *greedy path from* \ud835\udc62 to \ud835\udc63 in \ud835\udc3a is a path \ud835\udc651,\ud835\udc652*, ...,\ud835\udc65*\ud835\udc57, with \ud835\udc65\ud835\udc56 \u2208 P, for 1 \u2264 \ud835\udc56 \u2264 \ud835\udc57, where\n\ud835\udc651 = \ud835\udc62, \ud835\udc65\ud835\udc57 = \ud835\udc63, and (\ud835\udc65\ud835\udc56,\ud835\udc65\ud835\udc56+1) \u2208 \ud835\udc38, for 1 \u2264 \ud835\udc56 \u2264 \ud835\udc57 \u2212 1, such that \ud835\udc51M(\ud835\udc65\ud835\udc56, \ud835\udc63) > \ud835\udc51M(\ud835\udc65\ud835\udc56+1, \ud835\udc63) holds for all 1 \u2264 \ud835\udc56 \u2264 \ud835\udc57 \u2212 1. Thus, such a path is a directed path from \ud835\udc62 to \ud835\udc63 in \ud835\udc3a, where along the path the nodes get strictly closer to the endpoint of the path in terms of their distance in the ground space M. For two nodes *\ud835\udc62, \ud835\udc63* \u2208 P, we define \ud835\udc51greedy\n\ud835\udc3a\n(*\ud835\udc62, \ud835\udc63*) as the length of the shortest greedy path between \ud835\udc62 and \ud835\udc63 in \ud835\udc3a, where the length of a path \ud835\udc651,\ud835\udc652*, ...,\ud835\udc65*\ud835\udc57 is \ufffd\ud835\udc57\u22121\n\ud835\udc56=1 \u2113(\ud835\udc65\ud835\udc56,\ud835\udc65\ud835\udc56+1) = \ufffd\ud835\udc57\u22121\n\ud835\udc56=1 \ud835\udc51M(\ud835\udc65\ud835\udc56,\ud835\udc65\ud835\udc56+1).\n\nIf no greedy path exists between \ud835\udc62 and \ud835\udc63 in \ud835\udc3a, then \ud835\udc51greedy\n\ud835\udc3a\n(*\ud835\udc62, \ud835\udc63*) = \u221e. We will call \ud835\udc51greedy\n\ud835\udc3a\n(*\ud835\udc62, \ud835\udc63*) the greedy-routing-distance1 between \ud835\udc62 and \ud835\udc63 in network \ud835\udc3a. We say that *greedy routing is enabled* in \ud835\udc3a, if any pair of nodes in \ud835\udc3a has finite greedy-routing-distance. See Figure 1 for an example.\n\nFor any two nodes \ud835\udc62 and \ud835\udc63 in network \ud835\udc3a, we will compare their greedy-routing-distance with their distance in the ground space M. The ratio of these values is called the *stretch*, i.e., we have\n\ud835\udc51M (\ud835\udc62,\ud835\udc63)\n, if a greedy path from \ud835\udc62 to \ud835\udc63 exists in \ud835\udc3a , stretch\ud835\udc3a (*\ud835\udc62, \ud835\udc63*) =\n\ud835\udc4d\n, otherwise,\n\ufffd\ud835\udc51greedy\n\ud835\udc3a\n(\ud835\udc62,\ud835\udc63)\nwhere \ud835\udc4d is some arbitrarily large number that serves as a penalty for not having a greedy path.\n\nIntuitively, the stretch measures the detour that the best greedy path has to take, compared to the shortest possible path, i.e., to having a direct edge to the target node.\n\nAgents choose their strategy to minimize their *cost* within the formed network. The cost of agent \ud835\udc62 in network \ud835\udc3a(s) is defined as\n\ud835\udc50\ud835\udc62(s) = stretchcost\ud835\udc62(s) + edgecost\ud835\udc62(s),\n\nwhere stretchcost\ud835\udc62(s) = \ufffd\n                     \ud835\udc63\u2208P\\{\ud835\udc62} stretch\ud835\udc3a (s) (\ud835\udc62, \ud835\udc63) and edgecost\ud835\udc62(s) = \ud835\udefc|\ud835\udc46\ud835\udc62|, for a given \ud835\udefc > 0.\nThe social cost of a network \ud835\udc3a(s) is defined as \ud835\udc50(s) = \ufffd\n                                             \ud835\udc62\u2208P \ud835\udc50\ud835\udc62(s). For any set of points P, the\nnetwork \ud835\udc3a(s\u2217) = (P, \ud835\udc38(s\u2217), \u2113) minimizing the social cost is called the social optimum network for P.\n An improving response for an agent \ud835\udc62 for a strategy-profile s = (\ud835\udc46\ud835\udc62, s\u2212\ud835\udc62) is a strategy \ud835\udc46\u2032\n                                                                       \ud835\udc62 such\nthat \ud835\udc50\ud835\udc62((\ud835\udc46\u2032\n       \ud835\udc62, s\u2212\ud835\udc62)) < \ud835\udc50\ud835\udc62((\ud835\udc46\ud835\udc62, s\u2212\ud835\udc62)), i.e., by employing strategy \ud835\udc46\u2032\n                                                  \ud835\udc62, agent \ud835\udc62 has strictly lower cost\ncompared to using strategy \ud835\udc46\ud835\udc62. A strategy \ud835\udc46\u2217\n                                 \ud835\udc62 is called a best response for agent \ud835\udc62 for strategy-profile\ns = (\ud835\udc46\ud835\udc62, s\u2212\ud835\udc62), if \ud835\udc50\ud835\udc62(\ud835\udc46\u2217\n               \ud835\udc62, s\u2212\ud835\udc62) \u2264 \ud835\udc50\ud835\udc62(\ud835\udc46\u2032\n                          \ud835\udc62, s\u2212\ud835\udc62) for any other strategy \ud835\udc46\u2032\n                                                  \ud835\udc62 \u2286 \ud835\udc49 \\ {\ud835\udc62}, i.e., a best response\nstrategy minimizes agent \ud835\udc62's cost, given that the strategies of the other agents are fixed.\n A strategy-profile s is in pure Nash Equilibrium (NE) if no agent has an improving move for s, i.e.,\nin s every agent already employs a best response. Since we have bijection between strategy-profiles\ns and the corresponding networks \ud835\udc3a(s), we will say that network \ud835\udc3a(s) is in NE, if s is in NE. A\nnetwork \ud835\udc3a(s) is in Greedy Equilibrium (GE) [38] if no agent has an improving response that differs\nfrom its current strategy in adding, swapping or deleting a single incident outgoing edge, where\na swap is a combination of deleting an incident outgoing edge and adding another one. Notice\nthat any network in NE is also in GE. A network \ud835\udc3a(s) is in \ud835\udefd-approximate NE (\ud835\udefd-NE) if no agent \ud835\udc62\n\n1Note that the greedy-routing distance only depends on the network \ud835\udc3a and the metric space M but not on any concrete\ngreedy routing protocol. This more abstract definition ensures robust bounds, since our distance measure always gives a\nlower bound on the distance achieved by any particular greedy routing protocol.\n\ncan change its strategy such that its cost decreases below 1\n\ud835\udefd\ud835\udc50\ud835\udc62(s), i.e., no agent has an improving response that reduces its cost by at least a factor of \ud835\udefd.\n\nAn *improving (best) response path* is a sequence of strategy-profiles s0, s1, s2*, . . . ,* s\ud835\udc58, such that s\ud835\udc56 results from some agent changing to an improving (best) response in s\ud835\udc56\u22121, for 1 \u2264 \ud835\udc56 \u2264 \ud835\udc58. An improving (best) response cycle (IRC or BRC, respectively) is a cyclic improving response path, i.e., where s0 = s\ud835\udc58 holds. By definition, every best response path (cycle) is also an improving response path (cycle). The non-existence of improving response cycles, i.e., if every improvement path has finite length, is equivalent to the existence of an ordinal potential function [42]. The latter implies that NE can be found via natural sequential improvement dynamics. A strategic game is called weakly acyclic (weakly acyclic under best response) if from every strategy vector s there exists a finite improving (best) response path that starts in s and ends in a NE.\n"
    },
    {
        "level": "##",
        "title": "1.2 Related Work",
        "content": "\nNetwork Creation Games (NCGs) were first introduced by Fabrikant, Luthra, Maneva, Papadimitriou, and Shenker [27]. In their model, agents that correspond to nodes of a network strategically create incident undirected edges with the goal of minimizing their sum of hop-distances to all other agents.\n\nThey use constant edge costs, i.e., every edge costs \ud835\udefc > 0. As main results, they showed that NE\nalways exist, that the network minimizing the social cost is either a clique or a star, depending on \ud835\udefc, and that computing a best response is NP-hard. Later, the Price of Anarchy was bounded by\ud835\udc5c(\ud835\udc5b\ud835\udf00) for any \ud835\udf00 > 0 [23], and it was shown to be constant for wide range of \ud835\udefc [5, 23]. Also, it was shown that NCGs admit improving response cycles [35] and that any network in GE is in 3-NE [38]. Moreover, many variations of NCGs have been proposed and investigated, e.g., a bilateral version where both endpoints of an edge have to agree and pay for the edge [19, 29], variants with locality [8, 9, 21], with robustness considerations [16, 24, 40], with budget constraints [25, 37], with non-uniform edge prices [6, 15, 22, 39], and versions where only edge swaps are allowed [4, 20, 33, 41].\n\nCloser to our model are NCGs that involve geometry. In the wireline strong connectivity game [26]\nagents that correspond to points in the plane create undirected edges to ensure that they can reach all other agents. It is assumed that the cost of an edge equals its length. For this setting, NE exist and can be found efficiently. Geometric spanner games [1] are similar, but the agents want to ensure a given maximum stretch. While guaranteed existence of NEs was left open, it is shown that computing a best response is NP-hard. Bil\u00f2, Friedrich, Lenzner, and Melnichenko [7] defined a similar geometric model with undirected edges, where the agents want to minimize the sum of their shortest path distances to all other agents. They consider similar metrics as in our paper, in particular, they show that NE exist in 1-2-metrics and tree-metrics and that every GE is in 3-NE for any metric. Also, they prove that even on 1-2-metrics computing a best response is NP-hard. Later, it was shown that (\ud835\udefc + 1)-NE always exist [28]. Closest to our model is the work by Moscibroda, Schmid, and Wattenhofer [43]. Their model involves agents that form directed edges and that have the same cost function as in our model. Thus, the main difference to our model is that instead of greedy paths they use shortest paths for defining the stretch. They show for Euclidean metrics that NE may not exist and that deciding NE existence is NP-hard.\n\nTo the best of our knowledge, the only exists one model that combines network creation with greedy routing, introduced by Guly\u00e1s, Bir\u00f3, K\u0151r\u00f6si, R\u00e9tiv\u00e1ri, and Krioukov [32]. In contrast to our model, their agents only want to ensure to reach all other agents via greedy routing. Also, they fix\n\ud835\udefc = 1 and hyperbolic space is assumed. However, their cost function only enforces greedy routing locally, i.e., that agents have edges to nodes that are closer to any possible destination. Thus, agents do not influence each other, i.e., this is not a game-theoretic setting.\n\nAnother line of research is to investigate specific random graph models that generate networks where greedy routing almost surely succeeds. Also for this, hyperbolic space is essential [11, 14].\n\n1.3\nOur Contribution We consider an augmented variant of the network creation model by Moscibroda, Schmidt, and Wattenhofer [43]. The key new feature of our model is that the agents that want form a communication network explicitly aim for creating a network where greedy routing between all pairs of nodes is possible. At the same time, each agent tries to find a sweet-spot between establishing costly direct connections and maintaining a low average stretch. Besides this new conceptual feature, we also extend the previous work by focusing on specific metrics like 1-2-metric, tree metrics and Euclidean metrics. This is valuable, since we show that the underlying metric has a severe influence on the obtained game-theoretic properties and the complexity of the involved computational problems. See Table 1 for a summary of most of our results.\n\nFor networks created in a 1-2-metric, we show that Nash equilibria always exist. Moreover, we characterize the set of all NEs for every edge price \ud835\udefc. In particular, we show that all NEs must have a specific structure. Considering a weaker form of stability, we characterize the set of networks that are in Greedy Equilibrium. Also, we show that best response cycles are impossible, but that improving response cycles exist. Thus, best response dynamics are suitable for finding equilibria.\n\nHowever, regarding the complexity, we show that for \ud835\udefc > 1\n2 computing a best response and deciding if a given network is in NE is NP-hard. This raises the question of how to find equilibria efficiently.\n\nFor this, we show that O(log\ud835\udc5b)-approximate Nash equilibria can be found in polynomial time.\n\nMoreover, for \ud835\udefc \u2264 1\n2 NEs can be computed efficiently.\n\nIn tree-metrics the picture changes drastically. We still have guaranteed existence of NE, but here we find that NEs (and even GEs) are unique and can be computed efficiently for any edge price\n\ud835\udefc. Also, the game is weakly-acyclic under best responses, but computing a best response is NP-hard For Euclidean metrics, i.e., the case that is most relevant for practical applications, we transfer several negative results from [43] to our extended model: there are instances where no GE exist, which implies that also Nash equilibria are not guaranteed to exist. Moreover, computing a best response is NP-hard. On the positive side, show that the well-known \u0398-graph-construction can be employed to efficiently compute a 4.87-approximate Nash equilibrium. While this concept is already known for guaranteeing low stretch, we further support the use of \u0398-graphs by showing that at the same time, they also guarantee an almost stable network, i.e., the agents have a low incentive for local structural changes.\n\nFinally, for general metric spaces, we adapt the proof from [43] that deciding if an instance admits a NE or a GE is NP-hard. On the positive side, we show that (\ud835\udefc + 1)-approximate Nash equilibria always exist and can be computed efficiently.\n\n2\n1-2 METRICS\nWe consider metrics M where for every pair of nodes *\ud835\udc62, \ud835\udc63* we have \ud835\udc51M(*\ud835\udc62, \ud835\udc63*) \u2208 {1, 2}. We denote edges of weight 1 and 2 as *1-edges* and *2-edges*, respectively. 1-2-metrics is the simplest class of non-trivial metric spaces and they have often been studied, e.g., for the TSP [2, 34].\n\nIn spaces where all edges have the same length, direct edges would be the only possible greedy paths and as such the agents' strategies would be independent of each other. We start by giving some general statements about greedy paths and agent strategies in 1-2-metrics.\n\nLemma 2.1. *For any network in a 1-2-metric, all greedy paths have stretch* 1 or 3\n2 and consist of at most two edges.\n\n| 1-2                        | Tree                | Euclidean           | General      |\n|----------------------------|---------------------|---------------------|--------------|\n| NE                         |                     |                     |              |\n| NE always exist            | NE always exist     | no existence        | no existence |\n| characterization for every |                     |                     |              |\n| \ud835\udefc                          |                     |                     |              |\n| GE unique                  |                     |                     |              |\n| Complexity                 |                     |                     |              |\n| \ud835\udefc                          | >                   |                     |              |\n| 1                          |                     |                     |              |\n| /                          |                     |                     |              |\n| 2: BR-decision NP-hard     | BR NP-hard          | BR NP-hard          | BR NP-hard   |\n| NE-decision NP-hard        | NE-decision P       | NE-decision NP-hard |              |\n| \ud835\udefc                          |                     |                     |              |\n| \u2264                          |                     |                     |              |\n| 1                          |                     |                     |              |\n| /                          |                     |                     |              |\n| 2: BR-decision P           | GE-decision NP-hard |                     |              |\n| NE-decision P              |                     |                     |              |\n| Approx-NE                  |                     |                     |              |\n| O(                         |                     |                     |              |\n| log                        |                     |                     |              |\n| \ud835\udc5b                          |                     |                     |              |\n| )                          |                     |                     |              |\n| 1                          | 4                   |                     |              |\n| .                          |                     |                     |              |\n| 87                         |                     |                     |              |\n| \ud835\udefc                          |                     |                     |              |\n| +                          |                     |                     |              |\n| 1                          |                     |                     |              |\n\nProof. Let *\ud835\udc62, \ud835\udc63* \u2208 P and \ud835\udc62 \u2260 \ud835\udc63. If \ud835\udc51(*\ud835\udc62, \ud835\udc63*) = 1, there can be no other node closer to \ud835\udc63 than \ud835\udc62. Thus, the only possible greedy path is *\ud835\udc62, \ud835\udc63* with a stretch of 1 that uses one edge. Otherwise, \ud835\udc51(*\ud835\udc62, \ud835\udc63*) = 2, and only nodes \ud835\udc65 with \ud835\udc51(*\ud835\udc65, \ud835\udc63*) = 1 are closer to \ud835\udc63 than \ud835\udc62 and no other node is closer to \ud835\udc63 than any such \ud835\udc65. Thus, the only possible greedy paths are *\ud835\udc62, \ud835\udc63* and *\ud835\udc62,\ud835\udc65, \ud835\udc63* for any such \ud835\udc65. These paths use one or two edges, respectively, and have stretches of 1 and either 1 or 3\n2 depending on \ud835\udc51(\ud835\udc62,\ud835\udc65).\n\n\u25a1\nWhen examining these possible greedy paths, we also directly get the following statement.\n\nRemark 2.2. For any network in a 1-2-metric, 2-edges can only be the first edge of any greedy path.\n\nAlso, we find that 1-edges are crucial for enabling greedy routing.\n\nLemma 2.3. For any network in a 1-2-metric, if greedy routing is enabled then all 1-edges are built in both directions.\n\nProof. For the sake of contradiction, let *\ud835\udc62, \ud835\udc63* \u2208 P be such that \ud835\udc51(*\ud835\udc62, \ud835\udc63*) = 1 but there is no edge between \ud835\udc62 and \ud835\udc63 that \ud835\udc62 can use as greedy path, i.e., agent \ud835\udc62 does not build an edge to \ud835\udc63. However, without such an edge no greedy path from \ud835\udc62 to \ud835\udc63 can exist because no other node can be closer to \ud835\udc63\nthan \ud835\udc62 itself, a contradiction.\n\n\u25a1\n"
    },
    {
        "level": "##",
        "title": "Equilibrium Existence. We Start By Showing The Equivalence Of Ne And Social Optima.",
        "content": "\nTheorem 2.4. In a 1-2-metric, every NE is a social optimum and every social optimum is a NE.\n\nProof. First, by Lemma 2.3, every outgoing 1-edge incident to an agent \ud835\udc62 \u2208 P needs to be part of all of its best responses. Second, by Remark 2.2, no 2-edge that any agent builds can be part of a greedy path that is used by any other agent. Thus, the strategy of an agent \ud835\udc62 \u2208 P does not influence the cost function of any other agent \ud835\udc63 \u2208 P \\ {\ud835\udc62} beyond the 1-edges that need to be part of every strategy with costs less than \ud835\udc4d. Using this, we show by contradiction that every NE is a social optimum and vice versa.\n\nIf there was a NE that is not a social optimum, the latter would have lower social cost than the NE and thus, some agent \ud835\udc62 must have lower cost in the social optimum compared to its cost in the NE. Hence, it could reduce its cost by deviating to its strategy in the social optimum network.\n\nIn the same vein, if there was a social optimum network that is not in NE, an agent \ud835\udc62 would have an improving move that would also improve the social cost.\n\n\u25a1\nThis implies that NE always exist. In the following we characterize all NEs. For this, we introduce Domination Set Graphs, which are based on the notion of a *directed dominating set* [30] of a directed graph \ud835\udc3a = (*\ud835\udc49, \ud835\udc38*). For any node \ud835\udc62 \u2208 \ud835\udc49 , let \ud835\udc4a1(\ud835\udc62),\ud835\udc4a1\u21921(\ud835\udc62),\ud835\udc4a2(\ud835\udc62) denote the sets of nodes that node \ud835\udc62 can reach by a 1-edge, by a path of two 1-edges, and by a 2-edge, respectively. We denote\n\nby \ud835\udc4a \u2212\n    2 (\ud835\udc62) the set of nodes that \ud835\udc62 builds a 2-edge to and that \ud835\udc62 cannot reach via a path of two\n1-edges, i.e. \ud835\udc4a \u2212\n           2 (\ud835\udc62) = \ud835\udc4a2(\ud835\udc62) \\\ud835\udc4a1\u21921(\ud835\udc62), and let \ud835\udc4a +\n                                       2 (\ud835\udc62) be the set of nodes from \ud835\udc4a2(\ud835\udc62) to which \ud835\udc62\nalso has a path of two 1-edges, i.e., \ud835\udc4a +\n                              2 (\ud835\udc62) = \ud835\udc4a2(\ud835\udc62) \u2229\ud835\udc4a1\u21921. Note that \ud835\udc4a2(\ud835\udc62) = \ud835\udc4a \u2212\n                                                                 2 (\ud835\udc62) \u222a\ud835\udc4a +\n                                                                         2 (\ud835\udc62)\nand \ud835\udc4a \u2212\n    2 (\ud835\udc62) \u2229\ud835\udc4a +\n            2 (\ud835\udc62) = \u2205. The out-neighborhood of \ud835\udc62 is the set \ud835\udc41 (\ud835\udc62) = \ud835\udc4a1(\ud835\udc62) \u222a\ud835\udc4a2(\ud835\udc62).\n Subset \ud835\udc37 \u2286 \ud835\udc49 is dominating, if for every node \ud835\udc63 \u2208 \ud835\udc49 \\ \ud835\udc37 there exists a node \ud835\udc62 \u2208 \ud835\udc37 such that\n(\ud835\udc62, \ud835\udc63) \u2208 \ud835\udc38. For this we say that \ud835\udc62 dominates \ud835\udc63 and that \ud835\udc62 dominates its out-neighborhood.\n\n  Definition 2.5. Let \ud835\udc3a1\n                        \u2212\ud835\udc62 = \ufffdP \\ {\ud835\udc62}, \ud835\udc381\n                                          \u2212\ud835\udc62\n                                             \ufffd be the network without node \ud835\udc62 that only contains all\nthe 1-edges, i.e., we have that \ud835\udc381\n                                 \u2212\ud835\udc62 =\n                                       \ufffd\n                                         (\ud835\udc63,\ud835\udc64) \u2208 (P \\ {\ud835\udc62})2 | \ud835\udc51(\ud835\udc63,\ud835\udc64) = 1\n                                                                            \ufffd\n                                                                             .\n  A Domination Set Graph (DSG) on a 1-2-metric (P,\ud835\udc51) is a network \ud835\udc3a = (P, \ud835\udc38) with:\n\n(i) \ud835\udc38 \u2287 {(\ud835\udc63,\ud835\udc64) \u2208 P2 | \ud835\udc51(\ud835\udc63,\ud835\udc64) = 1},\n(ii) for every node \ud835\udc62, its out-neighborhood must be dominating in the network \ud835\udc3a1\n                                                                                                                  \u2212\ud835\udc62, and\n\n(iii) |\ud835\udc4a +\n          2 (\ud835\udc62)| cannot be decreased by a single edge deletion or swap without increasing |\ud835\udc41 (\ud835\udc62)|.\n\n  By (i), a DSG includes all 1-edges, by (ii), for every node \ud835\udc62, its out-neighborhood is dominating\nin the network without \ud835\udc62 consisting of only the 1-edges. Condition (iii) states that in a DSG an\nedge to a node \ud835\udc63 \u2208 \ud835\udc4a +\n                     2 (\ud835\udc62) cannot be removed or swapped with another one to a node \ud835\udc64 \u2209 \ud835\udc4a1\u21921(\ud835\udc62)\nwithout resulting in the out-neighborhood of \ud835\udc62 no longer being dominating in the network \ud835\udc3a1\n                                                                                                  \u2212\ud835\udc62.\n  We now define more specific DSGs:\n\n  Definition 2.6. A Minimum Domination Set Graph (MinDSG) is a DSG in which for every node \ud835\udc62\nits out-neighborhood contains all nodes reachable via 1-edges and the minimum number of nodes\nreachable via 2-edges so that it is dominating in \ud835\udc3a1\n                                                        \u2212\ud835\udc62. Thus, all out-neighborhoods are minimum\nsize dominating sets given that they need to include all nodes reachable via 1-edges.\n\n  Definition 2.7. A Maximum Domination Set Graph (MaxDSG) is a DSG that contains all possible\nedges, except 2-edges (\ud835\udc62,\ud835\udc64), where (\ud835\udc62, \ud835\udc63) and (\ud835\udc63,\ud835\udc64) both are 1-edges.\n\nNote that MaxDSGs are unique and the stretch between any pair of nodes in a MaxDSG is 1.\n\n2\n \ufffd |\ud835\udc4a2(\ud835\udc62)| + 1\n\n2, the BDSG corresponds to the MaxDSG.\n\n  Definition 2.8. A Balanced Domination Set Graph for \ud835\udefc > 0 (BDSG(\ud835\udefc)), is a subclass of Domination\nSet Graphs, where for any node \ud835\udc62, the quantity \ufffd\ud835\udefc \u2212 1\n\n                                                                             2 |\ud835\udc4a +\n                                                                                 2 (\ud835\udc62)| is minimized, achieving\na balance between the number of 2-edges that \ud835\udc62 builds in total, and the number of 2-edges to nodes\nin \ud835\udc4a1\u21921(\ud835\udc62). Note that for \ud835\udefc < 1\n\nSee Figure 2 for examples. Next, we show that DSGs are useful for our analysis.\n\nLemma 2.9. In a 1-2-metric any network in GE is a DSG.\n\n  Proof. By Lemma 2.3, all 1-edges need to be built in a GE network and thus condition (i) of a\nDSG is met. Next, assume for the sake of contradiction, that condition (ii) of a DSG is violated and\nthat the set \ud835\udc41 (\ud835\udc62) of nodes that some agent \ud835\udc62 builds edges to is not dominating in \ud835\udc3a1\n                                                                         \u2212\ud835\udc62. In other\nwords, there is some node \ud835\udc63 such that neither it nor any of its in-neighbors are in \ud835\udc41 (\ud835\udc62). Thus, the\nshortest path from \ud835\udc62 to \ud835\udc63 has at least 3 edges. By Lemma 2.1, no such path can be a greedy path\nand thus agent \ud835\udc62 could improve its cost by building an edge to \ud835\udc63. Finally, we consider condition\n(iii) that states that for any agent \ud835\udc62, the size of |\ud835\udc4a +\n                                          2 (\ud835\udc62)| cannot be decreased by a single operation\nwithout increasing |\ud835\udc41 (\ud835\udc62)|, provided that \ud835\udc41 (\ud835\udc62) is dominating in \ud835\udc3a1\n                                                       \u2212\ud835\udc62. For the sake of contradiction,\nlet us assume that this condition is violated in a GE network. There are two cases that this can\nhappen. In the first case, some agent \ud835\udc62 removes an edge to a node \ud835\udc63 \u2208 \ud835\udc4a +\n                                                                2 (\ud835\udc62), while agent \ud835\udc62's\nout-neighborhood is still dominating in \ud835\udc3a1\n                                   \u2212\ud835\udc62. Thus, agent \ud835\udc62 could reduce its edgecosts by removing\nthis edge, while its stretchcosts are not increased since the stretch to \ud835\udc63 is already 1 (there is a path of\ntwo 1-edges from \ud835\udc62 to \ud835\udc63) and the stretches to every other node remain the same. In the second case,\n\nstrategy in a BDSG since 0.5|\ud835\udc4a2(\ud835\udc4e)| + 0.5|\ud835\udc4a +\n2 (\ud835\udc4e)| is not minimal.\n\nsome agent \ud835\udc62 swaps an edge to a node \ud835\udc63 \u2208 \ud835\udc4a +\n                                      2 (\ud835\udc62) with one to a node \ud835\udc64 \u2209 (\ud835\udc4a2(\ud835\udc62) \u222a\ud835\udc4a1\u21921(\ud835\udc62)), while\nagent \ud835\udc62's out-neighborhood is still dominating in \ud835\udc3a1\n                                              \u2212\ud835\udc62. Thus, agent \ud835\udc62 could reduce its stretchcost,\nsince the stretch to \ud835\udc64 would become 1 instead of 3\n\n                                                           2, while its edgecosts and the stretches to every\nother node remain the same. Thus, we have that every GE is a DSG.\n                                                                                                                  \u25a1\n\nLemma 2.10. In a 1-2-metric, in any DSG greedy routing is enabled.\n\n  Proof. Every agent \ud835\udc62 trivially has a greedy path to any node that it builds an edge to. For any\nnode \ud835\udc63 that \ud835\udc62 does not build an edge to, there is still a node \ud835\udc65 in distance 1 from \ud835\udc63 that \ud835\udc62 builds an\nedge to because the out-neighborhood of \ud835\udc62 is by definition a dominating set in \ud835\udc3a1\n                                                                    \u2212\ud835\udc62. Thus, the path\n\ud835\udc62,\ud835\udc65, \ud835\udc63 exists in the DSG and it is a greedy path because \ud835\udc51(\ud835\udc62, \ud835\udc63) = 2 > 1 = \ud835\udc51(\ud835\udc65, \ud835\udc63).\n                                                                                 \u25a1\n\nWe now show that DSGs can be used to characterize NE.\n\nTheorem 2.11. In a 1-2-metric, for any \ud835\udefc > 0, all BDSG(\ud835\udefc) are the only NE.\n\n  Proof. Let \ud835\udc491(\ud835\udc62) = {\ud835\udc63 \u2208 P | \ud835\udc51M(\ud835\udc62, \ud835\udc63) = 1} and \ud835\udc492(\ud835\udc62) = {\ud835\udc63 \u2208 P | \ud835\udc51M(\ud835\udc62, \ud835\udc63) = 2} be the\nsets of nodes in distance 1 and in distance 2 from agent \ud835\udc62 in the ground space. Also, let \ud835\udc49 +\n                                                                             2 (\ud835\udc62) =\n\ud835\udc492(\ud835\udc62) \u2229\ud835\udc4a1\u21921(\ud835\udc62) denote the set of nodes in distance 2 from \ud835\udc62 that can be reached by a path of two\n1-edges, and \ud835\udc49 \u2212\n            2 (\ud835\udc62) = \ud835\udc492(\ud835\udc62) \\\ud835\udc49 +\n                          2 (\ud835\udc62) the set of nodes in distance 2 from agent \ud835\udc62 that \ud835\udc62 cannot reach\nvia a path of two 1-edges. Thus, we have \ud835\udc492(\ud835\udc62) = \ud835\udc49 +\n                                          2 (\ud835\udc62) \u222a\ud835\udc49 \u2212\n                                                  2 (\ud835\udc62). The cost of any strategy-profile s\nfor agent \ud835\udc62 is equal to\n\n\ud835\udc50\ud835\udc62(s) = |\ud835\udc491(\ud835\udc62)| + |\ud835\udc49 +\n                    2 (\ud835\udc62)| + |\ud835\udc4a \u2212\n                               2 (\ud835\udc62)| + 3\n\nBy rearranging terms, we get:\n\n2 \ufffd |\ud835\udc49 \u2212 2 (\ud835\udc62)| \u2212 |\ud835\udc4a \u2212 2 (\ud835\udc62)| \ufffd + \ud835\udefc \ufffd|\ud835\udc4a + 2 (\ud835\udc62)| + |\ud835\udc4a \u2212 2 (\ud835\udc62)| + |\ud835\udc491(\ud835\udc62)|\ufffd . 2 \ud835\udc50\ud835\udc62(s) = (\ud835\udefc + 1)|\ud835\udc491(\ud835\udc62)| + |\ud835\udc49 + 2 (\ud835\udc62)| + \ufffd \ud835\udefc \u2212 1 \ufffd |\ud835\udc4a \u2212 2 (\ud835\udc62)| + 3 2 |\ud835\udc49 \u2212 2 (\ud835\udc62)| + \ud835\udefc|\ud835\udc4a + 2 (\ud835\udc62)|. (1)\nNow, let s denote the strategy-profile of a BDSG(\ud835\udefc) network \ud835\udc3a(s). Assume towards a contradiction that there is an agent \ud835\udc62 \u2208 P that could decrease its cost in \ud835\udc3a(s) = \ud835\udc3a((\ud835\udc46\ud835\udc62, s\u2212\ud835\udc62)) by deviating to some other strategy \ud835\udc46\ud835\udc62 \u2260 \ud835\udc46\ud835\udc62. Let s = (\ud835\udc46\ud835\udc62, s\u2212\ud835\udc62) denote the strategy-profile after the deviation of agent \ud835\udc62. Note that, by Lemma 2.3, also in s all 1-edges have to be built, in particular, all outgoing 1-edges of agent \ud835\udc62, since otherwise greedy routing would not be enabled and thus agent \ud835\udc62 could not decrease its cost. Let\ud835\udc491(\ud835\udc62),\ud835\udc49 +\n2 (\ud835\udc62),\ud835\udc49 \u2212\n2 (\ud835\udc62),\ud835\udc4a +\n2 (\ud835\udc62) and\ud835\udc4a \u2212\n2 (\ud835\udc62) denote the sets from\n\nequation (1) with respect to strategy profile s and let \ud835\udc491(\ud835\udc62),\ud835\udc49 +\n                                                              2 (\ud835\udc62),\ud835\udc49 \u2212\n                                                                      2 (\ud835\udc62),\ud835\udc4a +\n                                                                              2 (\ud835\udc62) and\ud835\udc4a \u2212\n                                                                                          2 (\ud835\udc62) be the\nsets from equation (1) for strategy-profile s. Also, remember that \ud835\udc4a2(\ud835\udc62) = \ud835\udc4a +\n                                                                               2 (\ud835\udc62) \u222a\ud835\udc4a \u2212\n                                                                                         2 (\ud835\udc62) and let\n\n\ud835\udc4a2(\ud835\udc62) = \ud835\udc4a +\n     2 (\ud835\udc62) \u222a\ud835\udc4a \u2212\n         2 (\ud835\udc62). Now, observe that \ud835\udc491(\ud835\udc62) = \ud835\udc491(\ud835\udc62), \ud835\udc49 +\n                             2 (\ud835\udc62) = \ud835\udc49 +\n                                 2 (\ud835\udc62), and \ud835\udc49 \u2212\n                                       2 (\ud835\udc62) = \ud835\udc49 \u2212\n                                           2 (\ud835\udc62),\nsince these sets only depend on the 1-edges built by agent \ud835\udc62, which are the same in s and s. Thus,\nequation (1) gives agent \ud835\udc62's cost in strategy-profile s. For strategy-profile s, equation (1) yields\n\n2 \ud835\udc50\ud835\udc62(s) = (\ud835\udefc + 1)|\ud835\udc491(\ud835\udc62)| + |\ud835\udc49 + 2 (\ud835\udc62)| + \ufffd \ud835\udefc \u2212 1 \ufffd |\ud835\udc4a \u2212 2 (\ud835\udc62)| + 3 2 |\ud835\udc49 \u2212 2 (\ud835\udc62)| + \ud835\udefc|\ud835\udc4a + 2 (\ud835\udc62)|, (2)\n\nThus, using equation (1) and equation (2), that |\ud835\udc4a2(\ud835\udc62)| = |\ud835\udc4a +\n                                                             2 (\ud835\udc62)| + |\ud835\udc4a \u2212\n                                                                       2 (\ud835\udc62)|, that |\ud835\udc4a2(\ud835\udc62)| =\n|\ud835\udc4a +\n  2 (\ud835\udc62)| + |\ud835\udc4a \u2212\n            2 (\ud835\udc62)|, and that agent \ud835\udc62 has strictly lower cost in s compared to s, we have\n\n2 2\n\ud835\udc50\ud835\udc62(s) < \ud835\udc50\ud835\udc62(s)\n\ufffd\n\ud835\udefc \u2212 1\n\n\ufffd |\ud835\udc4a \u2212 2 (\ud835\udc62)| + \ud835\udefc|\ud835\udc4a + 2 (\ud835\udc62)| < \ufffd \ud835\udefc \u2212 1 2 2 \ufffd |\ud835\udc4a \u2212 2 (\ud835\udc62)| + \ud835\udefc|\ud835\udc4a + 2 (\ud835\udc62)| \ufffd \ud835\udefc \u2212 1 \ufffd \ufffd|\ud835\udc4a2(\ud835\udc62)| \u2212 |\ud835\udc4a + 2 (\ud835\udc62)|\ufffd + \ud835\udefc|\ud835\udc4a + 2 (\ud835\udc62)| < \ufffd \ud835\udefc \u2212 1 2 2 2 2 \ufffd |\ud835\udc4a2(\ud835\udc62)| \u2212 \ufffd \ud835\udefc \u2212 1 \ufffd |\ud835\udc4a + 2 (\ud835\udc62)| + \ud835\udefc|\ud835\udc4a + 2 (\ud835\udc62)| < \ufffd \ud835\udefc \u2212 1 \ufffd |\ud835\udc4a2(\ud835\udc62)| \u2212 \ufffd \ud835\udefc \u2212 1 \ufffd \ufffd |\ud835\udc4a2(\ud835\udc62)| \u2212 |\ud835\udc4a + 2 (\ud835\udc62)| \ufffd + \ud835\udefc|\ud835\udc4a + 2 (\ud835\udc62)| \ufffd \ud835\udefc \u2212 1 2 2 \ufffd |\ud835\udc4a2(\ud835\udc62)| + 1 \ufffd |\ud835\udc4a2(\ud835\udc62)| + 1 \ufffd |\ud835\udc4a + 2 (\ud835\udc62)| + \ud835\udefc|\ud835\udc4a + 2 (\ud835\udc62)| \ufffd \ud835\udefc \u2212 1 2 |\ud835\udc4a + 2 (\ud835\udc62)| < \ufffd \ud835\udefc \u2212 1 2 |\ud835\udc4a + 2 (\ud835\udc62)|.\nThis is a contradiction, because according to the definition of a BDSG(\ud835\udefc), in \ud835\udc3a(s) no agent \ud835\udc62 can decrease the quantity \ud835\udc4f = (\ud835\udefc \u2212 0.5)|\ud835\udc4a2(\ud835\udc62)| + 0.5|\ud835\udc4a +\n2 (\ud835\udc62)|. However, strategy \ud835\udc46\ud835\udc62 of agent \ud835\udc62 strictly decreases \ud835\udc4f. Therefore, a BDSG(\ud835\udefc) is a NE for any \ud835\udc4e > 0, and it is the only one.\n\n\u25a1\nTheorem 2.12. *In a 1-2-metric we have that (i) for* \ud835\udefc < 1\n2, the MaxDSG is the only NE, (ii) for\n\ud835\udefc = 1\n2, all DSGs are the only GE, but only the DSGs where no node builds edges to nodes reachable by two 1-edges are the only NE, (iii) for \ud835\udefc > 1\n2, all MinDSG are GE.\n\nProof. First, let \ud835\udefc < 1\n2. From Theorem 2.11 we have that *\ud835\udc35\ud835\udc37\ud835\udc46\ud835\udc3a*(\ud835\udefc) are the only NE. When\n\ud835\udefc < 1\n2, the network *\ud835\udc35\ud835\udc37\ud835\udc46\ud835\udc3a*(\ud835\udefc) corresponds to the MaxDSG. Thus, the MaxDSG is the only NE.\n\nNext, let \ud835\udefc = 1\n2. Then, the network *\ud835\udc35\ud835\udc37\ud835\udc46\ud835\udc3a*(\ud835\udefc) corresponds to DSGs where for every node \ud835\udc62 the quantity |\ud835\udc4a +\n2 (\ud835\udc62)| is minimized, i.e. no node builds edges to nodes that are reachable by two 1-edges.\n\nThus, this category of DSGs are the only NE.\n\nRegarding GE, every DSG is a GE because removing any edge would either remove all greedy paths to some node or increase the stretch to the endpoint of the edge by at least 1\n2 = \ud835\udefc. Also adding any edge would decrease stretches by at most 1\n\nadding any edge would decrease stretches by at most $\\frac{1}{2}=\\alpha$. Swapping an edge also cannot decrease stretches. The number of edges an agent $u$ builds remains the same after a swap. Consequently, agent $u$ can reduce its cost only by reducing its stretchcost. The stretchcost of agent $u$ is equal to\n\n$$\\frac{3}{2}\\left(|V|-1\\right)-\\frac{1}{2}\\left(|W_{1}(u)|+|W_{1-1}(u)|+|W_{2}^{-}(u)|\\right)\\tag{3}$$\n\nsince, by Lemma 2.1, all greedy paths have stretches $1$ or $\\frac{3}{2}$. By Lemma 2.3, all 1-edges have to be built to enable greedy routing, thus agent $u$ can only swap 2-edges.\n\nIf after one swap the size of $|W_{2}^{-}(u)|$:\n\n* decreases, then the stretchcost of agent $u$ increases because of (3):\n- decreases, then the stretchcost of agent \ud835\udc62 increases because of (3);\n\n- remains the same, then the stretchcost of agent \ud835\udc62 will remain the same;\n- increases, that means that |\ud835\udc4a +\n2 (\ud835\udc62)| will be decreased. By the definition of a DSG, the value\n|\ud835\udc4a +\n2 (\ud835\udc62)| cannot be decreased without increasing the size of the out-neighborhood of\ud835\udc62. Since\nwe are considering swaps, the number of edges that \ud835\udc62 builds cannot change, a contradiction.\nTherefore, swapping an edge is not an improving move for agent \ud835\udc62. Since, by Lemma 2.9, all GE are\nDSG, there can be no other GE.\nNext, let \ud835\udefc > 1\n2. Every MinDSG is a GE because removing an edge would also remove all greedy paths to some node and adding an edge would decrease stretches by at most 1\n2 < \ud835\udefc. As we showed before, swapping an edge is not an improving move either.\n\n\u25a1\nDynamic Properties. We explore if NE networks can be found by allowing agents iteratively to select improving or best responses. First, we show that improving response cycles (IRCs) exist.\n\nThen we contrast this with the positive result that best response cycles (BRCs) cannot exist. The proof of the former relies on the absence of greedy paths between certain agents, resulting in costs higher than \ud835\udc4d. This is necessary, since no IRCs can exist if the costs of all agents are less than \ud835\udc4d, i.e., if the network already enables greedy routing. This can be proven with the same arguments used below to show that best response cycles cannot exist.\n\nTheorem 2.13. In a 1-2-metric, IRCs can exist for any \ud835\udefc > 0.\n\nProof. We show that there is an IRC in the metric shown in Figure 3a regardless the value of \ud835\udefc.\n\nIn particular, in each step of the IRC, the stretchcosts of the agents that changes its strategy improves by exactly \ud835\udc4d \u2212 1. By definition of \ud835\udc4d, this will always outweigh any changes in the edgecosts, since agents always build the same number of edges of the same length.\n\nConsider the network shown in Figure 3b. If agent \ud835\udc62 changes its strategy from {\ud835\udc50,\ud835\udc51,\ud835\udc56} to {*\ud835\udc4e,\ud835\udc4f, \ud835\udc63*}\nwe get the network shown in Figure 3c. With this agent \ud835\udc62 only loses greedy paths of length 1 to the three nodes *\ud835\udc50,\ud835\udc51* and \ud835\udc56 and of length 2 (and stretch 1) to node \ud835\udc57 but it gains greedy paths of length 1 to the three nodes *\ud835\udc4e,\ud835\udc4f* and \ud835\udc63 and of length 2 (and stretch 1) to the two nodes \ud835\udc52 and \ud835\udc53 . Thus, agent\n\ud835\udc62's stretchcost improves by \ud835\udc4d \u2212 1.\n\na\nu\nc\na\nu\na\nc\nu\na\nc\nu\na\nc\nu\nc\nu\nu\nu\nu\nu\nd\nd\nd\nd\nd\ni\ni\ni\ni\ni\nb\nb\nb\nb\nb\nj\nj\nj\nj\nj\nf\nf\nf\nf\nf\nh\nh\nh\nh\nh\ne\ne\nv\ng\ne\ne\ne\nvv\ng\nvv\ng\nvv\ng\nvv\ng\n\nIn the network depicted in Figure 3c, if agent \ud835\udc63 changes its strategy from {\ud835\udc52, \ud835\udc53 ,\ud835\udc62} to {*\u210e,\ud835\udc54,\ud835\udc56*}\nwe get the network shown in Figure 3d. With this agent \ud835\udc63 only loses greedy paths of length 1 to the three nodes *\ud835\udc52, \ud835\udc53* and \ud835\udc62 (note that the paths *\ud835\udc63,\ud835\udc62,\ud835\udc4e* and *\ud835\udc63,\ud835\udc62,\ud835\udc4f* are not greedy paths) but at the same time it establishes greedy paths of length 1 to the three nodes *\ud835\udc54,\u210e* and \ud835\udc56 and of length 2 (and stretch 1) to \ud835\udc57. Thus, agent \ud835\udc63's stretchcosts improve by \ud835\udc4d \u2212 1.\n\nIn the network shown in Figure 3d, if agent \ud835\udc62 changes its strategy {\ud835\udc4e,\ud835\udc4f, \ud835\udc63} to {*\ud835\udc50,\ud835\udc51,\ud835\udc56*} we get the network shown in Figure 3e. With this, agent \ud835\udc62 loses greedy paths of length 1 to the three nodes\n\ud835\udc4e,\ud835\udc4f and \ud835\udc63 but it gains greedy paths of length 1 to the three nodes *\ud835\udc50,\ud835\udc51* and \ud835\udc56 and of length 2 (and stretch 1) to \ud835\udc57. Thus, agent \ud835\udc62's stretchcosts improve by \ud835\udc4d \u2212 1.\n\nFinally, if in the network shown in Figure 3e agent \ud835\udc63 changes its strategy {\u210e,\ud835\udc54,\ud835\udc56} to {*\ud835\udc52, \ud835\udc53 ,\ud835\udc62*} we get the network shown in Figure 3b. With this strategy change, agent \ud835\udc63 only loses greedy paths of length 1 to the three nodes *\ud835\udc54,\u210e* and \ud835\udc56 and of length 2 (and stretch 1) to \ud835\udc57 but it gains greedy paths of length 1 to the three nodes *\ud835\udc52, \ud835\udc53* and \ud835\udc62 and of length 2 (and stretch 1) to the two nodes \ud835\udc50 and \ud835\udc51. Thus, agent \ud835\udc63's stretchcost improves by \ud835\udc4d \u2212 1. As this is the same strategy-profile that we started with, we have found an improving response cycle.\n\n\u25a1\nInterestingly, if the agents iteratively select best response strategies, then no such cyclic behavior can occur. Thus, best response dynamics starting from any initial network are guaranteed to converge to a NE network. However, we will show later that computing a best response is hard.\n\nTheorem 2.14. In a 1-2-metric, best response cycles cannot exist.\n\nProof. By Lemma 2.3, all best responses always build all 1-edges and thus, a best response cycle can never include changes of the 1-edges. By Remark 2.2, no 2-edge that any agent builds can be part of a greedy path that is used by any other agent and thus, any best response cycle cannot consist solely of changes of 2-edges either. Thus, best response cycles cannot exist.\n\n\u25a1\nComputational Complexity. Here, we investigate the computational complexity of computing a best response and of deciding if a given network is in NE. We use our characterization theorem and the tight connection to the Minimum Dominating Set problem, which asks for minimum size dominating set for a given network \ud835\udc3a. It is well-known that Minimum Dominating Set is NP-hard [31]. We get the following dichotomy results:\nTheorem 2.15. In a 1-2-metric, computing a best response and deciding if a given network is in NE\nis NP-hard for \ud835\udefc > 1\n2.\n\n2 *and polynomial time computable for* \ud835\udefc \u2264 1\nProof. We first show that computing a best response strategy is NP-hard with \ud835\udefc > 1\n\nProof. We first show that computing a best response strategy is NP-hard with $\\alpha>\\frac{1}{2}$. For this, we reduce from the Minimum Dominance Set problem. Given any graph $G=(V,E)$ for which we want to compute a minimum size dominating set. We embed the nodes of $G$ as follows into a 1-2-metric: Let $\\mathcal{M}=(V\\cup\\{u\\},d)$ be a 1-2-metric, with $u\\notin V$ being a new node, where for all $x,y\\in V\\cup\\{u\\}$ we have\n\n$$d(x,y)=\\begin{cases}1&\\text{,if}(x,y)\\in E,\\\\ 2&\\text{,otherwise.}\\end{cases}$$\nFurthermore, let s be a strategy-profile where in \ud835\udc3a(s) = (\ud835\udc49 \u222a {\ud835\udc62}, \ud835\udc38(s)) all the edges in \ud835\udc3a are built in both directions but no other edges. We now consider the best response of agent \ud835\udc62 and let \ud835\udc37 be the set of nodes that agent \ud835\udc62 builds edges to in its best response in \ud835\udc3a(s). Since we have \ud835\udc51(\ud835\udc62,\ud835\udc65) = 2\nfor every node \ud835\udc65 \u2208 \ud835\udc49 , it follows that node \ud835\udc62 has a stretch of 1 to all nodes in \ud835\udc37 and a stretch of 3\n2 to all nodes \ud835\udc64 \u2208 \ud835\udc49 \\ \ud835\udc37 such that there exists a node \ud835\udc63 \u2208 \ud835\udc37 with (\ud835\udc63,\ud835\udc64) \u2208 \ud835\udc38(s), i.e, the edge (\ud835\udc63,\ud835\udc64) is a 1-edge in \ud835\udc3a(s). Let \ud835\udc36 be the set of these nodes, i.e., \ud835\udc36 = {\ud835\udc64 \u2208 \ud835\udc49 \\ \ud835\udc37 | \u2203\ud835\udc63 \u2208 \ud835\udc37 \u2227 (\ud835\udc63,\ud835\udc64) \u2208 \ud835\udc38(s)}. Note that for any node \ud835\udc67 \u2208 \ud835\udc49 \\ (\ud835\udc36 \u222a \ud835\udc37 \u222a {\ud835\udc62}), there cannot exist a greedy path from \ud835\udc62 to \ud835\udc67, since, by Lemma 2.1, any such path can have at most two edges. Thus, since for any such node \ud835\udc67 agent \ud835\udc62\nwould incur stretchcost of \ud835\udc4d > \ud835\udefc + 3\n2, no such node \ud835\udc67 can exist if \ud835\udc37 is agent \ud835\udc62's best response. In this case, building an edge to \ud835\udc67 would strictly decrease agent \ud835\udc62's cost, i.e., we have that \ud835\udc36 \u222a \ud835\udc37 = \ud835\udc49 .\n\nThus, the set \ud835\udc37 must be a dominating set in \ud835\udc3a. Since every edge costs \ud835\udefc > 1\n2 and building an edge to a node \ud835\udc65 \u2208 \ud835\udc49 can decrease its stretchcost at most by 1\n2, agent \ud835\udc62's best response should buy as few edges as possible such that greedy routing is enabled, i.e., the set \ud835\udc37 must be a minimum size dominating set in \ud835\udc3a. Thus, computing a best response strategy for agent \ud835\udc62 is NP-hard.\n\nNext, if we have \ud835\udefc \u2264 1\n2 then the proof of Theorem 2.12 implies for every agent \ud835\udc62 that building all the edges that are incident outgoing edges of \ud835\udc62 in the unique MaxDSG is a best response. This can be computed in polynomial time, since these are all outgoing edges, except the 2-edges (\ud835\udc62,\ud835\udc64), where (*\ud835\udc62, \ud835\udc63*) and (\ud835\udc63,\ud835\udc64) both are 1-edges.\n\nThe NP-hardness of deciding if a given network \ud835\udc3a is in NE in a 1-2-metric follows from Theorem 2.11. There it is shown that for \ud835\udefc > 1\n2 all NE must be BDSG(\ud835\udefc), i.e., the strategy of every agent\n\ud835\udc62 must minimize the quantity (\ud835\udefc \u2212 1\n2)|\ud835\udc4a2(\ud835\udc62)| + 1\n2 |\ud835\udc4a +\n2 (\ud835\udc62)|. When |\ud835\udc4a +\n2 (\ud835\udc62)| = 0, this corresponds to a minimum dominating set for the network \ud835\udc3a1\n\u2212\ud835\udc62 and this network can be arbitrary.\n\nFinally, deciding if a given network is in NE with \ud835\udefc \u2264 1\n2 can be done in polynomial time by Theorem 2.12.\n\n\u25a1\nThe characterization in Theorem 2.12 and the above results directly imply that our results also hold for the problem of computing a NE network. This is true since MaxDSGs can be computed in polynomial time, whereas computing a MinDSG is NP-hard.\n\nCorollary 2.16. *In a 1-2-metric computing a NE can be done in polynomial time if* \ud835\udefc \u2264 1\n2 and it is NP-hard if \ud835\udefc > 1\n2.\n\nGreedy Equilibria. Since computing a best response is NP-hard if \ud835\udefc > 1\n2, it is natural to consider simpler strategy changes, where an agent can only add, delete or swap a single edge to decrease its cost. Networks where no such strategy changes can improve the agents' cost are exactly the set of Greedy Equilibria (GE) [38]. For other related variants of network creation games, it has been shown that GE are good approximations of NE, i.e., that every GE is a 3-NE [7, 38]. We now show, that enforcing greedy routing changes this picture completely.\n\nTheorem 2.17. In a 1-2-metric there are GE, that are not in \u03a9( \ud835\udefc\ud835\udc5b\n\ud835\udefc+\ud835\udc5b)-NE.\n\nProof. We begin by showing that there are networks in GE that are not in \ud835\udefc\ud835\udc5b\u22122\ud835\udefc+\ud835\udc5b\u22121\n2\ud835\udefc+\ud835\udc5b\n-approximate NE. For this, we examine the network \ud835\udc3a in Figure 4.\n\nFirst, we show that network \ud835\udc3a is in GE by proving that no agent can decrease its cost by adding, removing, or swapping a single incident outgoing edge.\n\nLet s be the strategy-profile such that \ud835\udc3a = \ud835\udc3a(s). Agent \ud835\udc62 cannot remove its edges to any node\n\ud835\udc4e\ud835\udc56 or \ud835\udc64 as that would remove the greedy path to that node. The stretch to node \ud835\udc63 is already 1, so adding or swapping an edge would not be beneficial either. No agent \ud835\udc4e\ud835\udc56 can remove its edge to nodes \ud835\udc62 or \ud835\udc63 as that would remove the greedy paths to them. The stretch to all other nodes \ud835\udc4e\ud835\udc56 and \ud835\udc64\nis already 1, so adding or swapping an edge would not be beneficial either. Agent \ud835\udc63 cannot remove any edge to a node \ud835\udc4e\ud835\udc56 or \ud835\udc64 because that would remove the greedy paths to them. The stretch to node \ud835\udc62 is already 1 so adding or swapping an edge would not be beneficial either. Finally, agent \ud835\udc64 cannot remove any edge to nodes \ud835\udc62 or \ud835\udc63 because otherwise there would be no greedy path to that node. The stretches to all nodes \ud835\udc4e\ud835\udc56 are already 1, so adding an edge or swapping one would not be beneficial either. Thus, the network \ud835\udc3a is in GE. Let \ud835\udc46\ud835\udc62 = {\ud835\udc4e1, \u00b7 \u00b7 \u00b7 ,\ud835\udc4e\ud835\udc65,\ud835\udc64}, i.e., agent \ud835\udc62's strategy in\n\ud835\udc3a(s) = \ud835\udc3a(\ud835\udc46\ud835\udc62, s\u2212\ud835\udc62). The cost of agent \ud835\udc62 is then given by\n\ud835\udc50\ud835\udc62(\ud835\udc46\ud835\udc62, s\u2212\ud835\udc62) = stretchcost\ud835\udc62(\ud835\udc46\ud835\udc62, s\u2212\ud835\udc62) + edgecost\ud835\udc62(\ud835\udc46\ud835\udc62, s\u2212\ud835\udc62) = \ud835\udefc(\ud835\udc65 + 1) + \ud835\udc5b \u2212 1 = \ud835\udc5b(\ud835\udefc + 1) \u2212 2\ud835\udefc \u2212 1, since we have that \ud835\udc65 = \ud835\udc5b \u2212 3.\n\nNow, if in contrast agent \ud835\udc62 would remove its edges to all nodes \ud835\udc4e\ud835\udc56 and instead build one edge to node \ud835\udc63, i.e., the strategy \ud835\udc46\u2032\n\ud835\udc62 = {\ud835\udc63,\ud835\udc64}, this yields a cost of\n2.\n\n\ud835\udc50\ud835\udc62(\ud835\udc46\u2032\n    \ud835\udc62, s\u2212\ud835\udc62) = stretchcost\ud835\udc62(\ud835\udc46\u2032\n                             \ud835\udc62, s\u2212\ud835\udc62) + edgecost\ud835\udc62(\ud835\udc46\u2032\n                                                  \ud835\udc62, s\u2212\ud835\udc62) = 2\ud835\udefc + 3\n\n2\ud835\udc65 + 2 = 2\ud835\udefc + 3\n\n2\ud835\udc5b \u2212 5\n\nThus, the network is not in \ud835\udc50\ud835\udc62 (\ud835\udc46\ud835\udc62,s\u2212\ud835\udc62 )\n\n\ud835\udefc+\ud835\udc5b)-approximate NE.\n                                   \u25a1\n\n\ud835\udc50\ud835\udc62 (\ud835\udc46\u2032\ud835\udc62,s\u2212\ud835\udc62 ) = \ud835\udc5b(\ud835\udefc+1)\u22122\ud835\udefc\u22121\n\n2\ud835\udefc+3/2\ud835\udc5b\u22125/2 \u2208 \u03a9( \ud835\udefc\ud835\udc5b\n\nApproximate Equilibria. For\ud835\udefc > 1\n\n                                          2, we know that NE exist, but even deciding if a given network is\nin NE is NP-hard. Thus, aiming for approximate equilibria seems an appropriate solution. However,\nwe have seen that simply using GE for this is also an option. However, since approximation\nalgorithms exist for the Dominating Set problem, there is a different approach.\n\nTheorem 2.18. In 1-2-metrics, a O(log\ud835\udc5b)-approximate NE always exists.\n\n2\n \ufffd |\ud835\udc4a2(\ud835\udc62)| + 1\n\n  Proof. By Theorem 2.11 we have that for \ud835\udefc > 0 all \ud835\udc35\ud835\udc37\ud835\udc46\ud835\udc3a(\ud835\udefc) are the only NE. That means that\nfor every node \ud835\udc62 the quantity \ud835\udc4f = \ufffd\ud835\udefc \u2212 1\n\n                                                              2 |\ud835\udc4a +\n                                                                   2 (\ud835\udc62)| should be minimum. Using the fact\nthat |\ud835\udc4a2(\ud835\udc62)| = |\ud835\udc4a +\n                    2 (\ud835\udc62)| + |\ud835\udc4a \u2212\n                                 2 (\ud835\udc62)|, we get that \ud835\udc4f = \ufffd\ud835\udefc \u2212 1\n\n                                                                   2\n                                                                    \ufffd |\ud835\udc4a \u2212\n                                                                         2 (\ud835\udc62)| + \ud835\udefc|\ud835\udc4a +\n                                                                                        2 (\ud835\udc62)|.\n  Then, we construct a network that is in O(log\ud835\udc5b)-approximate NE as follows. To ensure that\ngreedy routing is enabled, we first construct a MaxDSG network \ud835\udc3a. Now, we consider every agent \ud835\udc62\nsequentially. We know that agent \ud835\udc62's strategy must be a dominating set in the network \ud835\udc3a1\n                                                                                                          \u2212\ud835\udc62. Since\nthe Dominating Set problem is a special case of the Set Cover problem, we can use the standard\ngreedy approximation algorithm for Weighted Set Cover [17] to compute a dominating set that\nis at most a factor of O(log\ud835\udc5b) larger than the minimum size dominating set, where every node\n\ud835\udc63 \u2208 \ud835\udc4a +\n      2 (\ud835\udc62) has weight \ud835\udefc, and every node \ud835\udc65 \u2208 \ud835\udc4a \u2212\n                                                        2 (\ud835\udc62) has weight (\ud835\udefc \u2212 1\n\n                                                                                  2). We now replace agent \ud835\udc62's\nstrategy in \ud835\udc3a by the computed approximate dominating set.\n  With this, we ensure that greedy routing is still enabled, and we have that no agent can decrease\nits edgecost by more than a factor of O(log\ud835\udc5b) by any strategy change. Moreover, observe that,\nsince greedy routing is enabled, we have, by Lemma 2.1, that all pairwise stretches are at either 1 or\n3\n2. Thus, in any strategy that ensures that greedy routing works for some agent \ud835\udc62, the stretchcosts\nof \ud835\udc62 can be at most a factor of 3\n\n                                     2 \u2208 O(log\ud835\udc5b) higher that its best possible stretchcost. Thus, in the\nconstructed network, any agent\ud835\udc62 can improve its cost at most by a factor of O(log\ud835\udc5b) by performing\na strategy change.\n                                                                                                                  \u25a1\n\n3\n   TREE METRICS\nNow we examine networks that are created with an underlying tree metric. Remember that in\na tree metric, a positively weighted undirected spanning tree \ud835\udc47 is given, such that for all nodes\n\ud835\udc62, \ud835\udc63 \u2208 P, we have \ud835\udc51(\ud835\udc62, \ud835\udc63) = \ud835\udc51\ud835\udc47 (\ud835\udc62, \ud835\udc63). In the following, we always use \ud835\udc47 to denote this tree.\n  Let s\ud835\udc47 denote the strategy-profile, where every edge of \ud835\udc47 is created in both directions and let\n\ud835\udc3a\ud835\udc47 = \ud835\udc3a(s\ud835\udc47 ) be the corresponding created network, i.e., \ud835\udc3a\ud835\udc47 is identical to \ud835\udc47, but every edge is\nreplaced by directed edges in both directions of the same weight as the respective edge in \ud835\udc47. For\nour analysis, we will consider the network \ud835\udc3a\ud835\udc47 = (P, \ud835\udc38\ud835\udc47, \u2113) rooted at a node \ud835\udc5f \u2208 P, denoted as \ud835\udc3a\ud835\udc47\n                                                                           \ud835\udc5f .\nThis is defined analogous to rooting the tree \ud835\udc47 at node \ud835\udc5f. We say that node \ud835\udc63 is the child of node \ud835\udc62\nin \ud835\udc3a\ud835\udc47\n   \ud835\udc5f , if (\ud835\udc62, \ud835\udc63) \u2208 \ud835\udc38\ud835\udc47 and if \ud835\udc51(\ud835\udc62,\ud835\udc5f) < \ud835\udc51(\ud835\udc63,\ud835\udc5f), i.e., if \ud835\udc62 is closer to \ud835\udc5f than \ud835\udc63. Moreover, in \ud835\udc3a\ud835\udc47\n                                                                    \ud835\udc5f node \ud835\udc64 is\na descendant of node \ud835\udc62, if a path \ud835\udc62 = \ud835\udc651,\ud835\udc652, . . . ,\ud835\udc65\ud835\udc58 = \ud835\udc64 exists, such that \ud835\udc65\ud835\udc56+1 is the child of \ud835\udc651, for\n1 \u2264 \ud835\udc56 \u2264 \ud835\udc58 \u2212 1. We assume that \ud835\udc62 is also a descendant of itself.\n\nSince for all our purposes the network \ud835\udc3a\ud835\udc47\n\ud835\udc5f behaves exactly like the tree \ud835\udc47 rooted at \ud835\udc5f, we will from now on use the terminology from trees, when working with \ud835\udc3a\ud835\udc47 or \ud835\udc3a\ud835\udc47\n\ud835\udc5f . For example, for \ud835\udc3a\ud835\udc47\n\ud835\udc5f\nwe let *\ud835\udc60\ud835\udc62\ud835\udc4f\ud835\udc61\ud835\udc5f\ud835\udc52\ud835\udc52*(\ud835\udc62) denote the subtree of \ud835\udc3a\ud835\udc47\n\ud835\udc5f rooted at node \ud835\udc62 that includes all descendants of \ud835\udc62\n(including \ud835\udc62). Furthermore, let *\ud835\udc4f\ud835\udc52\ud835\udc59\ud835\udc5c\ud835\udc64*(\ud835\udc62) refer to the set of subtrees {*\ud835\udc60\ud835\udc62\ud835\udc4f\ud835\udc61\ud835\udc5f\ud835\udc52\ud835\udc52*(\ud835\udc63) | \ud835\udc63 is a child of \ud835\udc62}.\n\nWe start with two general statements about greedy paths and strategies in tree metrics.\n\nLemma 3.1. In a tree metric, a greedy path from node \ud835\udc62 to a node \ud835\udc63 can only consist of nodes that are in the same subtree from \ud835\udc4f\ud835\udc52\ud835\udc59\ud835\udc5c\ud835\udc64(\ud835\udc62) in \ud835\udc47 rooted at \ud835\udc62 that contains node \ud835\udc63.\n\nProof. Let \ud835\udc62 \u2208 P and let \ud835\udc63 \u2208 P \\ {\ud835\udc62}. Now, consider the set of subtrees *\ud835\udc4f\ud835\udc52\ud835\udc59\ud835\udc5c\ud835\udc64*(\ud835\udc62) of \ud835\udc47 rooted at\n\ud835\udc62. Note that the subtrees in *\ud835\udc4f\ud835\udc52\ud835\udc59\ud835\udc5c\ud835\udc64*(\ud835\udc62) include all agents except \ud835\udc62. Hence, there exists a subtree \ud835\udc47 \u2032 \u2208\n\ud835\udc4f\ud835\udc52\ud835\udc59\ud835\udc5c\ud835\udc64(\ud835\udc62), such that \ud835\udc63 \u2208 \ud835\udc47 \u2032. To show our statement it thus suffices to show that, indeed, a path from \ud835\udc62 to \ud835\udc63 can only be a greedy path, if the path consists exclusively of nodes in \ud835\udc47 \u2032. Towards a contradiction, consider any agent \ud835\udc65 \u2209 \ud835\udc47 \u2032 and assume that \ud835\udc65 is part of a greedy path from \ud835\udc62 to \ud835\udc63.\n\nObserve that agent \ud835\udc65 has a path to \ud835\udc63 only via \ud835\udc62, since \ud835\udc47 is rooted at \ud835\udc62 and \ud835\udc65 and \ud835\udc63 are nodes of two different subtrees of \ud835\udc62. It follows that \ud835\udc51\ud835\udc47 (\ud835\udc65, \ud835\udc63) > \ud835\udc51\ud835\udc47 (*\ud835\udc62, \ud835\udc63*), which contradicts that the considered path is greedy path from \ud835\udc62 to \ud835\udc63 via \ud835\udc65.\n\n\u25a1\nLemma 3.2. In any strategy profile s that enables greedy routing with a tree metric, for any node \ud835\udc62, in \ud835\udc3a(s) agent \ud835\udc62 needs to have an edge to some node in every subtree in \ud835\udc4f\ud835\udc52\ud835\udc59\ud835\udc5c\ud835\udc64(\ud835\udc62) of \ud835\udc47 rooted at \ud835\udc62.\n\nProof. Fix any agent \ud835\udc62 \u2208 P and consider the network \ud835\udc3a(s). For the sake of contradiction, let\n\ud835\udc47 \u2032 \u2208 *\ud835\udc4f\ud835\udc52\ud835\udc59\ud835\udc5c\ud835\udc64*(\ud835\udc62) be a subtree of \ud835\udc47, such that agent \ud835\udc62 does not build an edge to any node \ud835\udc63 \u2208 \ud835\udc47 \u2032 in\n\ud835\udc3a(s). Then, fixing any \ud835\udc64 \u2208 \ud835\udc47 \u2032 and, by Lemma 3.1, all greedy paths from \ud835\udc62 to \ud835\udc64 can only traverse nodes in \ud835\udc47 \u2032. Thus, by recalling that agent \ud835\udc62 has no edge to any vertex \ud835\udc63 \u2208 \ud835\udc47 \u2032, agent \ud835\udc62 cannot have a greedy path to \ud835\udc64.\n\n\u25a1\nEquilibrium Existence. Here, we show the existence of equilibria and partially characterize them.\n\nTheorem 3.3. In a tree metric, the network \ud835\udc3a\ud835\udc47 is always a NE and a social optimum.\n\nProof. Consider an agent \ud835\udc62 \u2208 P. First, observe that in \ud835\udc3a\ud835\udc47 all of agent \ud835\udc62's distances and stretches are already minimal. Hence, adding any edges cannot improve its stretchcosts. Moreover, by Lemma 3.2, agent \ud835\udc62 also cannot remove any edges. For the same reason, swapping an edge (*\ud835\udc62, \ud835\udc63*)\nwith another edge (\ud835\udc62,\ud835\udc64) is only possible for \ud835\udc47 \u2032 \u2208 *\ud835\udc4f\ud835\udc52\ud835\udc59\ud835\udc5c\ud835\udc64*(\ud835\udc62), such that *\ud835\udc62, \ud835\udc63* \u2208 \ud835\udc49 (\ud835\udc47 \u2032), i.e., if the two nodes belong to the same subtree. However, since swapping edges does not change agent\n\ud835\udc62's edgecosts, such a swap cannot be an improving move since agent \ud835\udc62's stretchcosts cannot be further improved. Hence, there are no improving moves for any agent and \ud835\udc3a\ud835\udc47 is a NE. Because all distances and stretches are minimal and there is no cheaper set of edges to enable greedy routing, the network \ud835\udc3a\ud835\udc47 must also be social optimum.\n\n\u25a1\nIn the following, we show that GE are unique. This completely characterizes all GE and NE.\n\nTheorem 3.4. In a tree metric, the network \ud835\udc3a\ud835\udc47 is the only GE.\n\nProof. We prove the statement in two steps while assuming, for the sake of contradiction, that there is a GE network \ud835\udc3a that differs from \ud835\udc3a\ud835\udc47 . First, we show that in this case, network \ud835\udc3a\ud835\udc47 cannot be a proper subgraph of \ud835\udc3a, i.e., network \ud835\udc3a contains all the edges of \ud835\udc3a\ud835\udc47 and at least one other edge.\n\nThen, in a second step, we show that if \ud835\udc3a\ud835\udc47 is not a subgraph of \ud835\udc3a, i.e., if \ud835\udc3a does not contain all the edges of \ud835\udc3a\ud835\udc47 , then \ud835\udc3a is not in GE. This yields that any GE network must be identical to \ud835\udc3a\ud835\udc47 .\n\nTo show that \ud835\udc3a\ud835\udc47 = (P, \ud835\udc38\ud835\udc47, \u2113) cannot be a proper subgraph of \ud835\udc3a = (P*, \ud835\udc38, \u2113*), we observe that if this was the case, then \ud835\udc38\ud835\udc47 \u2282 \ud835\udc38 holds, i.e., \ud835\udc38 \\ \ud835\udc38\ud835\udc47 \u2260 \u2205. Thus, there exists at least one edge\n\ud835\udc52 \u2208 \ud835\udc38 \\ \ud835\udc38\ud835\udc47 . However, by definition of \ud835\udc3a\ud835\udc47 , the total strechcosts and the distances are minimized in the network \ud835\udc3a\ud835\udc47 . Hence, removing the edge \ud835\udc52 \u2208 \ud835\udc38 \\\ud835\udc38\ud835\udc47 would be an improving move. A contradiction.\n\nLet us now consider the case that \ud835\udc3a\ud835\udc47 is not a subgraph of \ud835\udc3a, while \ud835\udc3a is a GE. We define\n\ud835\udc53\ud835\udc4e(\ud835\udc4f) to be the number of descendants of node \ud835\udc4f in \ud835\udc3a\ud835\udc47\n\ud835\udc4e . We consider a specific edge, for this, let (*\ud835\udc62, \ud835\udc63*) = arg min(\ud835\udc4e,\ud835\udc4f)\u2208\ud835\udc38\ud835\udc47 \\\ud835\udc38 \ud835\udc53\ud835\udc4e(\ud835\udc4f), i.e., the tuple (*\ud835\udc62, \ud835\udc63*) that is an edge in \ud835\udc3a\ud835\udc47 but not in \ud835\udc3a, that minimizes the number of descendants of node \ud835\udc63 in \ud835\udc3a\ud835\udc47\n\ud835\udc62 . Notice that such an edge always exists, since we assume that \ud835\udc3a\ud835\udc47 is not a subgraph of \ud835\udc3a and thus, \ud835\udc38\ud835\udc47 \\ \ud835\udc38 \u2260 \u2205.\n\nWe now examine the greedy path from node \ud835\udc62 to node \ud835\udc63 in network \ud835\udc3a. Since (*\ud835\udc62, \ud835\udc63*) \u2209 \ud835\udc38, in conjunction with the assumption that \ud835\udc3a is a GE, there must exist another node \ud835\udc65 \u2260 \ud835\udc63, such that\n(\ud835\udc62,\ud835\udc65) \u2208 \ud835\udc38, that enables a greedy path from \ud835\udc62 to \ud835\udc63 in \ud835\udc3a, i.e., the edge (\ud835\udc62,\ud835\udc65) is the first edge on this greedy path. By Lemma 3.1, node \ud835\udc65 must belong to the same subtree\ud835\udc47 \u2032 as \ud835\udc63 in *\ud835\udc4f\ud835\udc52\ud835\udc59\ud835\udc5c\ud835\udc64*(\ud835\udc62) in\ud835\udc47 rooted at \ud835\udc62. Since \ud835\udc63 is a child of \ud835\udc62 in\ud835\udc47 rooted at \ud835\udc62, we have that\ud835\udc47 \u2032 = *\ud835\udc60\ud835\udc62\ud835\udc4f\ud835\udc61\ud835\udc5f\ud835\udc52\ud835\udc52*(\ud835\udc63). It follows that (\ud835\udc62,\ud835\udc65) \u2209 \ud835\udc38\ud835\udc47 , since in \ud835\udc3a\ud835\udc47\n\ud835\udc5f node \ud835\udc62 only has \ud835\udc63 as child in \ud835\udc47 \u2032.\n\nNext, recall that we assume that \ud835\udc3a = \ud835\udc3a(s) = \ud835\udc3a(\ud835\udc46\ud835\udc62, s\u2212\ud835\udc62) is a GE. It follows that for agent \ud835\udc62 it is not an improving move to swap the edge (\ud835\udc62,\ud835\udc65) \u2208 \ud835\udc38 for the edge (*\ud835\udc62, \ud835\udc63*) \u2209 \ud835\udc38. Now, let \ud835\udc46\u2032\n\ud835\udc62 = \ud835\udc46\ud835\udc62 \\ {\ud835\udc65}\nand let s\ud835\udc63 = (\ud835\udc46\u2032\n\ud835\udc62 \u222a {\ud835\udc63}, s\u2212\ud835\udc62). For convenience, let s\ud835\udc65 = s = (\ud835\udc46\u2032\n\ud835\udc62 \u222a {\ud835\udc65}, s\u2212\ud835\udc62).\n\nWe first show, that after the swap, i.e., in \ud835\udc3a(s\ud835\udc63), agent \ud835\udc62 still has a greedy path to all nodes. Since in \ud835\udc3a(s\ud835\udc63) nothing changes for greedy paths that do not use \ud835\udc65 as first hop, it suffices to focus on such paths. Thus, consider a greedy path \ud835\udc43 from \ud835\udc62 to \ud835\udc67 \u2208 P in \ud835\udc3a(s\ud835\udc65) that uses \ud835\udc65 as first hop. Since \ud835\udc3a is a GE, agent \ud835\udc63 has a greedy path \ud835\udc44 to \ud835\udc65 in \ud835\udc3a. Moreover, since \ud835\udc65 is in *\ud835\udc60\ud835\udc62\ud835\udc4f\ud835\udc61\ud835\udc5f\ud835\udc52\ud835\udc52*(\ud835\udc63), it follows that\n\ud835\udc51\ud835\udc47 (\ud835\udc63,\ud835\udc65) < \ud835\udc51\ud835\udc47 (\ud835\udc62,\ud835\udc65). Thus, in \ud835\udc3a(s\ud835\udc63) agent \ud835\udc62 has a greedy path to \ud835\udc65 via node \ud835\udc63 and \ud835\udc44. This implies that also in \ud835\udc3a(s\ud835\udc63) agent \ud835\udc62 has a greedy path to \ud835\udc67, since the path via \ud835\udc63, \ud835\udc44 and \ud835\udc43 is a greedy path.\n\nThe swap from (\ud835\udc62,\ud835\udc65) to (*\ud835\udc62, \ud835\udc63*) decreases agent \ud835\udc62's stretch to \ud835\udc63 but it does not change \ud835\udc62's edgecost.\n\nSince the swap does not reduce agent \ud835\udc62's cost, there must be a node \ud835\udc64 \u2208 P to which agent \ud835\udc62's stretch increases after the swap, i.e., stretch\ud835\udc3a (s\ud835\udc65 ) (\ud835\udc62,\ud835\udc64) < stretch\ud835\udc3a (s\ud835\udc63 ) (\ud835\udc62,\ud835\udc64). It follows, that in\n\ud835\udc3a = \ud835\udc3a(s\ud835\udc65), agent \ud835\udc62 has a greedy path via \ud835\udc65 to \ud835\udc64.\n\nBy Lemma 3.1, it follows that both nodes \ud835\udc65 and \ud835\udc64 must belong to the same subtree\ud835\udc47 \u2032 in *\ud835\udc4f\ud835\udc52\ud835\udc59\ud835\udc5c\ud835\udc64*(\ud835\udc62)\nin \ud835\udc47 rooted at \ud835\udc62, which must be \ud835\udc47 \u2032 = *\ud835\udc60\ud835\udc62\ud835\udc4f\ud835\udc61\ud835\udc5f\ud835\udc52\ud835\udc52*(\ud835\udc63).\n\nNow, if stretch\ud835\udc3a (\ud835\udc63,\ud835\udc64) = 1, then agent \ud835\udc62's stretch to \ud835\udc64 must be optimal in \ud835\udc3a(s\ud835\udc63) and hence, the stretch cannot have increased compared to \ud835\udc3a(s\ud835\udc65). Hence, we can assume that stretch\ud835\udc3a (\ud835\udc63,\ud835\udc64) > 1. In this case, there there must be a vertex \ud835\udc5d along the path from \ud835\udc63 to \ud835\udc64 in\ud835\udc47 that in \ud835\udc3a does not create the edge to the next node \ud835\udc5e on that path. Thus, the edge (\ud835\udc5d,\ud835\udc5e) is in \ud835\udc38\ud835\udc47 \\\ud835\udc38. Now, note that \ud835\udc53\ud835\udc5d (\ud835\udc5e) < \ud835\udc53\ud835\udc62(\ud835\udc63), since \ud835\udc5e's subtree in \ud835\udc3a\ud835\udc47\n\ud835\udc5d is completely contained in \ud835\udc63's subtree in \ud835\udc3a\ud835\udc47\n\ud835\udc62 . This is a contradiction to the choice of edge (*\ud835\udc62, \ud835\udc63*), i.e., to (*\ud835\udc62, \ud835\udc63*) having the minimum \ud835\udc53 -value.\n\nThus, every edge of \ud835\udc3a\ud835\udc47 must be contained in \ud835\udc3a and thus, \ud835\udc3a\ud835\udc47 is the only GE.\n\n\u25a1\nDynamic Properties. We investigate if NE networks in tree metrics can be found by iteratively selecting best responses. The answer is affirmative.\n\nTheorem 3.5. In a tree metric our game is weakly acyclic under best responses.\n\nProof. Fix any \ud835\udc62 \u2208 P and root \ud835\udc47 in \ud835\udc62. Consider any subtree \ud835\udc47 \u2032 \u2208 *\ud835\udc4f\ud835\udc52\ud835\udc59\ud835\udc5c\ud835\udc64*(\ud835\udc62). Recall that, by Lemma 3.2, agent \ud835\udc62 needs to build an edge (*\ud835\udc62, \ud835\udc63*), where \ud835\udc63 \u2208 \ud835\udc47 \u2032, in order to enable greedy routing from \ud835\udc62 to the set of nodes in \ud835\udc47 \u2032. Note that in case that in a strategy-profile s all edges of \ud835\udc47 \u2032 are created in both directions, then the best response of agent \ud835\udc62 in s is to create the edge (\ud835\udc62,\ud835\udc62\u2032), where\n\ud835\udc62\u2032 is the root of subtree \ud835\udc47 \u2032, since \ud835\udc62\u2032 = arg min\ud835\udc63\u2208\ud835\udc49 (\ud835\udc47 \u2032) \ud835\udc51\ud835\udc47 (*\ud835\udc62, \ud835\udc63*).\n\nWe can now use this observation to get from any strategy-profile s to the strategy-profile s\ud835\udc47\nby a finite sequence of best responses. For this, we root \ud835\udc47 in \ud835\udc62 and activate the agents of \ud835\udc47 in a bottom-up fashion, i.e., starting with the leaves and then moving upwards. This ensures that all edges of \ud835\udc3a\ud835\udc47 are eventually created.\n\nAfter all edges of \ud835\udc3a\ud835\udc47 are created, we activate all agents that still have edges that do not belong to \ud835\udc3a\ud835\udc47 in any order. Any such edge will be removed since the edges of \ud835\udc3a\ud835\udc47 already suffice to achieve optimal stretchcosts. Thus, since \ud835\udc3a\ud835\udc47 is a NE, our game is weakly acyclic under best responses.\n\n\u25a1\nComputational Complexity. Here, we investigate the computational complexity of computing a best response in tree metrics. We show, that this is a hard problem.\n\nTheorem 3.6. In tree metrics, computing a best response is NP-hard.\n\nProof. The main argument of the proof is that computing a best response boils down to solving Set Cover [34]. To this end, we reduce from Set Cover and show that if the number of edges build in a best response strategy of an agent in our constructed instance could be computed in polynomial time, then the size of a minimum set cover could also be computed in polynomial time.\n\nLet \ud835\udc43 = ({\ud835\udc651, ...\ud835\udc65\ud835\udc5b}, {\ud835\udc441*, ...,\ud835\udc44*\ud835\udc5a}) be an instance of Set Cover, where {\ud835\udc651*, ...\ud835\udc65*\ud835\udc5b} is the set of elements that need to be covered and {\ud835\udc441*, ...,\ud835\udc44*\ud835\udc5a} is a collection of subsets of the elements that can be selected. Given a Set Cover-instance, we construct a corresponding bipartite graph \ud835\udc3a(*\ud835\udc49, \ud835\udc38*)\nwith a node for every set \ud835\udc44\ud835\udc56 and for every element \ud835\udc65\ud835\udc56, and edges between every set and its contained elements. We add nodes *\ud835\udc62, \ud835\udc63* and \ud835\udc50 and connect node \ud835\udc63 to node \ud835\udc50 as well as every node \ud835\udc44\ud835\udc56. The tree metric then is defined as in Figure 5a and we fix \ud835\udefc > 4.\n\nLet \ud835\udc36 be a minimum set cover of \ud835\udc43. We show that the number of edges that agent \ud835\udc62 builds in a best response in the corresponding game instance is 1 + |\ud835\udc36|. First, observe that node \ud835\udc63 only inherits outgoing edges. Thus, agent \ud835\udc62 has to create an edge to node \ud835\udc63 to enable a greedy path to \ud835\udc63. In contrast, consider the potential edge (\ud835\udc62,\ud835\udc50). Note that \ud835\udc51 (\ud835\udc62,\ud835\udc63)+\ud835\udc51 (\ud835\udc63,\ud835\udc50)\n2 by our metric in Figure 5 a.\n\n\ud835\udc51 (\ud835\udc62,\ud835\udc50)\n= 2 < 4 < \ud835\udefc. This, in conjunction with the observation that a potential edge (\ud835\udc62,\ud835\udc50) would not affect the stretch to any other node, leads to the conclusion that the creation of an edge from \ud835\udc62 to \ud835\udc50 is not an improving move.\n\nLet \ud835\udc35 be the best response of agent \ud835\udc62. Given \ud835\udc35, where we do not necessarily know which nodes it contains, except for \ud835\udc63 \u2208 \ud835\udc35 and \ud835\udc50 \u2209 \ud835\udc35, we construct another strategy \ud835\udc35\u2032 = \ud835\udf13 (\ud835\udc35). The mapping\n\ud835\udf13 : \ud835\udc4b \u2192 \ud835\udc4c, for *\ud835\udc4b,\ud835\udc4c* \u2286 \ud835\udc49 , is defined as follows: For \ud835\udc44 \ud835\udc57 \u2208 \ud835\udc35 or \ud835\udc63 \u2208 \ud835\udc35 we simply map \ud835\udf13 (\ud835\udc44 \ud835\udc57) = \ud835\udc44 \ud835\udc57\nand \ud835\udf13 (\ud835\udc63) = \ud835\udc63 respectively. In contrast, for any \ud835\udc65\ud835\udc56 \u2208 \ud835\udc35 we have \ud835\udf13 (\ud835\udc65\ud835\udc56) = \ud835\udc44 \ud835\udc57, where (\ud835\udc44 \ud835\udc57,\ud835\udc65\ud835\udc56) \u2208 \ud835\udc38(\ud835\udc3a).\n\nNote that for any \ud835\udc65\ud835\udc56 such a node \ud835\udc44 \ud835\udc57 exists by the construction of \ud835\udc3a. Moreover, we observe that whenever \ud835\udc65\ud835\udc56 \u2208 \ud835\udc35, then this implies that \ud835\udc44 \ud835\udc57 \u2209 \ud835\udc35. To see this, consider any such pair (\ud835\udc44 \ud835\udc57,\ud835\udc65\ud835\udc56) and assume that \ud835\udc44 \ud835\udc57,\ud835\udc65\ud835\udc56 \u2208 \ud835\udc35, i.e., in agent \ud835\udc62's best response it builds an edge to both \ud835\udc65\ud835\udc56 and \ud835\udc44 \ud835\udc57.\n\nWe show that dropping the edge (\ud835\udc62,\ud835\udc65\ud835\udc56) would be a better response, hence, a contradiction to \ud835\udc35\nbeing the best response of agent \ud835\udc62. To that end, consider the stretchcosts without (\ud835\udc62,\ud835\udc65\ud835\udc56). As \ud835\udc62 has a greedy path to \ud835\udc65\ud835\udc56 via \ud835\udc44 \ud835\udc57, we get stretch\ud835\udc3a (\ud835\udc62,\ud835\udc65\ud835\udc56) = \ud835\udc51 (\ud835\udc62,\ud835\udc44 \ud835\udc57 )+\ud835\udc51 (\ud835\udc44 \ud835\udc57,\ud835\udc65\ud835\udc56 )\n\ud835\udc51 (\ud835\udc62,\ud835\udc65\ud835\udc56 )\n= 3\nIn contrast, including the edge (\ud835\udc62,\ud835\udc65\ud835\udc56) entails an additional cost of \ud835\udefc with optimal stretch stretch\ud835\udc3a (\ud835\udc62,\ud835\udc65\ud835\udc56) = 1. Since \ud835\udefc > 4, this yields a larger cost for \ud835\udc62 compared to dropping the edge. The contradiction is completed by noticing that the edge (\ud835\udc62,\ud835\udc65\ud835\udc56) does not enable any other greedy path for \ud835\udc62. We conclude that our defined mapping \ud835\udf13 : \ud835\udc4b \u2192 \ud835\udc4c is valid for our set \ud835\udc35 and that |\ud835\udc35| = |\ud835\udc35\u2032|\nfor \ud835\udc35\u2032 = \ud835\udf13 (\ud835\udc35).\n\nNext, we observe that \ud835\udc35\u2032 \\ {\ud835\udc63} constitutes a set cover \ud835\udc43. To see that, recall that greedy routing is enabled for agent \ud835\udc62 via strategy \ud835\udc35. Thus, strategy \ud835\udc35\u2032 also enables greedy routing for agent \ud835\udc62 which entails that for all \ud835\udc65\ud835\udc56 there exists an \ud835\udc44 \ud835\udc57 such that (\ud835\udc62,\ud835\udc44 \ud835\udc57) and (\ud835\udc44 \ud835\udc57,\ud835\udc65\ud835\udc56).\n\nMoreover, the set \ud835\udc35\u2032 \\ {\ud835\udc63} must constitute a minimum set cover: Suppose that it were otherwise and a set cover \ud835\udc36 with |\ud835\udc36| < |\ud835\udc35\u2032| \u2212 1 exists. We show that \ud835\udc37 = \ud835\udc36 \u222a {\ud835\udc63} is a better response than \ud835\udc35, which yields a contradiction, since \ud835\udc35 is the best response for agent \ud835\udc62. In both strategies, agent \ud835\udc62's distances to \ud835\udc50 and \ud835\udc63 are \ud835\udc51(\ud835\udc62,\ud835\udc50) = 4 and \ud835\udc51(*\ud835\udc62, \ud835\udc63*) = 3 respectively, the distances to all \ud835\udc44 \ud835\udc57 are either\n\ud835\udc51(\ud835\udc62,\ud835\udc44 \ud835\udc57) = 3 or \ud835\udc51(*\ud835\udc62, \ud835\udc63*) + \ud835\udc51(\ud835\udc63,\ud835\udc44 \ud835\udc57) = 5 depending on whether there exists an edge (\ud835\udc62,\ud835\udc44 \ud835\udc57). Thus, the difference in stretch of a network including (\ud835\udc62,\ud835\udc44 \ud835\udc57), in contrast to the same network but without edge (\ud835\udc62,\ud835\udc44 \ud835\udc57), is \u0394 = \ud835\udc51 (\ud835\udc62,\ud835\udc63)+\ud835\udc51 (\ud835\udc63,\ud835\udc44 \ud835\udc57 )\n\ud835\udc51 (\ud835\udc62,\ud835\udc44 \ud835\udc57 )\n\u2212 \ud835\udc51 (\ud835\udc62,\ud835\udc44 \ud835\udc57 )\n\ud835\udc51 (\ud835\udc62,\ud835\udc44 \ud835\udc57 ) = 2\n3. In a similar fashion, recalling that if (\ud835\udc62,\ud835\udc65\ud835\udc56) is not included then agent \ud835\udc62 creates the edge (\ud835\udc62,\ud835\udc44 \ud835\udc57), we have that the distance to \ud835\udc65\ud835\udc56 is either \ud835\udc51(\ud835\udc62,\ud835\udc65\ud835\udc56) = 4 or \ud835\udc51(\ud835\udc62,\ud835\udc44 \ud835\udc57) + \ud835\udc51(\ud835\udc44 \ud835\udc57,\ud835\udc65\ud835\udc56) = 6 depending on whether there is an edge (\ud835\udc62,\ud835\udc65\ud835\udc56). Moreover, the difference in stretch is then given by \ud835\udeff = \ud835\udc51 (\ud835\udc62,\ud835\udc44 \ud835\udc57 )+\ud835\udc51 (\ud835\udc44 \ud835\udc57,\ud835\udc65\ud835\udc56 )\n\ud835\udc51 (\ud835\udc62,\ud835\udc65\ud835\udc56 )\n\u2212 \ud835\udc51 (\ud835\udc65\ud835\udc56 )\n\ud835\udc51 (\ud835\udc65\ud835\udc56 ) = 1\n2. Then, setting \ud835\udc4b = {\ud835\udc651, \u00b7 \u00b7 \u00b7 ,\ud835\udc65\ud835\udc5b} and\n\ud835\udc44 = {\ud835\udc441, \u00b7 \u00b7 \u00b7 ,\ud835\udc44\ud835\udc5a}, the stretchcosts of \ud835\udc35 are at least\n\n\ud835\udc51(*\ud835\udc62, \ud835\udc63*) + \ud835\udc51(\ud835\udc63,\ud835\udc44 \ud835\udc57) \ud835\udc51(\ud835\udc62,\ud835\udc44\ud835\udc56,\ud835\udc57) + \ud835\udc51(\ud835\udc44\ud835\udc56,\ud835\udc57,\ud835\udc65\ud835\udc56) \ud835\udc51(*\ud835\udc62, \ud835\udc63*) + \ud835\udc51(\ud835\udc63,\ud835\udc50) \ud835\udc51(\ud835\udc62,\ud835\udc50) + \ud835\udc51(*\ud835\udc62, \ud835\udc63*) \ud835\udc51(*\ud835\udc62, \ud835\udc63*) + \ud835\udc51(\ud835\udc62,\ud835\udc44 \ud835\udc57) + \ud835\udc51(\ud835\udc62,\ud835\udc65\ud835\udc56) + |\ud835\udc35| \u2212 1 \ud835\udc5a \u2211\ufe01 \ud835\udc5b \u2211\ufe01 \ud835\udc44 \ud835\udc57 \u2208\ud835\udc44\\\ud835\udc35 \ud835\udc65\ud835\udc56 \u2208\ud835\udc4b\\\ud835\udc35 \ud835\udc51(*\ud835\udc62, \ud835\udc63*) + \ud835\udc51(\ud835\udc63,\ud835\udc44 \ud835\udc57) \ud835\udc51(\ud835\udc62,\ud835\udc44\ud835\udc56,\ud835\udc57) + \ud835\udc51(\ud835\udc44\ud835\udc56,\ud835\udc57,\ud835\udc65\ud835\udc56) \u2265 \ud835\udc51(*\ud835\udc62, \ud835\udc63*) + \ud835\udc51(\ud835\udc63,\ud835\udc50) \ud835\udc57=1 \ud835\udc56=1 \ud835\udc51(\ud835\udc62,\ud835\udc50) + \ud835\udc51(*\ud835\udc62, \ud835\udc63*) \ud835\udc51(*\ud835\udc62, \ud835\udc63*) + \ud835\udc51(\ud835\udc62,\ud835\udc44 \ud835\udc57) + \ud835\udc51(\ud835\udc62,\ud835\udc65\ud835\udc56) \u2212 *\ud835\udc5a\ud835\udc4e\ud835\udc65*(\ud835\udeff, \u0394)(|\ud835\udc35| \u2212 1), \ud835\udc5a \u2211\ufe01 \ud835\udc5b \u2211\ufe01\nwhere \ud835\udc44\ud835\udc56,\ud835\udc57 is \ud835\udc44 \ud835\udc57 such that (\ud835\udc44 \ud835\udc57,\ud835\udc65\ud835\udc56) \u2208 \ud835\udc38(\ud835\udc3a). The last line follows as we overcount the number of edges by a factor of |\ud835\udc35| \u2212 1 and we assume the discount factor of the stretches to be maximal\n\u0394 = *\ud835\udc5a\ud835\udc4e\ud835\udc65*(\ud835\udeff, \u0394) in order to achieve a lower bound. Plugging in the values now yields\n\n3\ud835\udc5a + 6 4\ud835\udc5b \u2212 2 stretchcost\ud835\udc62(\ud835\udc35) \u2265 4 2 + 3 3 + 5 3 (|\ud835\udc35| \u2212 1). (4)\nAnalogously, we derive an upper bound on the stretchcost of agent \ud835\udc62 applying strategy \ud835\udc37, giving\n\n\ud835\udc51(*\ud835\udc62, \ud835\udc63*) + \ud835\udc51(\ud835\udc63,\ud835\udc44 \ud835\udc57) \ud835\udc51(\ud835\udc62,\ud835\udc44\ud835\udc56,\ud835\udc57) + \ud835\udc51(\ud835\udc44\ud835\udc56,\ud835\udc57,\ud835\udc65\ud835\udc56) \ud835\udc51(*\ud835\udc62, \ud835\udc63*) + \ud835\udc51(\ud835\udc63,\ud835\udc50) \ud835\udc51(\ud835\udc62,\ud835\udc50) + \ud835\udc51(*\ud835\udc62, \ud835\udc63*) \ud835\udc51(*\ud835\udc62, \ud835\udc63*) + \ud835\udc51(\ud835\udc62,\ud835\udc44 \ud835\udc57) + \ud835\udc51(\ud835\udc62,\ud835\udc65\ud835\udc56) + |\ud835\udc37| \u2212 1 \ud835\udc5a \u2211\ufe01 \ud835\udc5b \u2211\ufe01 \ud835\udc44 \ud835\udc57 \u2208\ud835\udc44\\\ud835\udc37 \ud835\udc65\ud835\udc56 \u2208\ud835\udc4b\\\ud835\udc37 \ud835\udc51(*\ud835\udc62, \ud835\udc63*) + \ud835\udc51(\ud835\udc63,\ud835\udc44 \ud835\udc57) \ud835\udc51(\ud835\udc62,\ud835\udc44\ud835\udc56,\ud835\udc57) + \ud835\udc51(\ud835\udc44\ud835\udc56,\ud835\udc57,\ud835\udc65\ud835\udc56) \u2264 \ud835\udc51(*\ud835\udc62, \ud835\udc63*) + \ud835\udc51(\ud835\udc63,\ud835\udc50) \ud835\udc57=1 \ud835\udc56=1 \ud835\udc51(\ud835\udc62,\ud835\udc50) + \ud835\udc51(*\ud835\udc62, \ud835\udc63*) \ud835\udc51(*\ud835\udc62, \ud835\udc63*) + \ud835\udc51(\ud835\udc62,\ud835\udc44 \ud835\udc57) + \ud835\udc51(\ud835\udc62,\ud835\udc65\ud835\udc56) \u2212 *\ud835\udc5a\ud835\udc56\ud835\udc5b*(\ud835\udeff, \u0394)(|\ud835\udc37| \u2212 1) \ud835\udc5a \u2211\ufe01 \ud835\udc5b \u2211\ufe01 = 4 3\ud835\udc5a + 6 4\ud835\udc5b \u2212 1 2 + 3 3 + 5 2 (|\ud835\udc37| \u2212 1). (5)\nThus, combining Equation (4) with Equation (5), the increase in stretch cost from strategy \ud835\udc35 in comparison to strategy \ud835\udc37 is at most\n\n$$\\operatorname{stretchcost}_{u}(D)-\\operatorname{stretchcost}_{u}(B)\\leq{\\frac{2}{3}}|B|-{\\frac{1}{2}}|D|-{\\frac{1}{6}}<{\\frac{2}{3}}|B|-{\\frac{1}{2}}|D|.$$\nThis now stays in contrast to the reduction in edgecosts given by edgecost\ud835\udc62(\ud835\udc35) \u2212edgecost\ud835\udc62(\ud835\udc37) =\n(|\ud835\udc35| \u2212 |\ud835\udc37|)\ud835\udefc. We now recall that \ud835\udefc > 4 and by previous discussion it is finally revealed that\n\n$\\mathrm{edgecost}_{u}(B)-\\mathrm{edgecost}_{u}(D)=(|B|-|D|)\\alpha$\n\n$$>(|B|-|D|)4$$ $$>\\frac{2}{3}|B|-\\frac{1}{2}|D|$$ $$>\\mathrm{stretchcost}_{u}(D)-\\mathrm{stretchcost}_{u}(B),$$\nwhereby the penultimate line follows since |\ud835\udc37| \u2264 |\ud835\udc35|\u22121. Notice that edgecost\ud835\udc62(\ud835\udc35)\u2212edgecost\ud835\udc62(\ud835\udc37) >\nstretchcost\ud835\udc62(\ud835\udc37) \u2212 stretchcost\ud835\udc62(\ud835\udc35) entails that \ud835\udc50\ud835\udc62(\ud835\udc35) > \ud835\udc50\ud835\udc62(\ud835\udc37). Hence, if a best response of size \ud835\udc58\ncould be computed in polynomial time, then the size of a set cover of size \ud835\udc58 \u2212 1 could be found in polynomial time, since our reduction is computable in polynomial time as well.\n\n\u25a1\n4\nEUCLIDEAN METRICS\nIn this section, we study Euclidean metrics, which are metrics where there is a function that maps agents to points in a \ud835\udc51-dimensional Euclidean space, such that the distances in the metric between agents correspond to the distances of their points in the Euclidean space. We use the 2-norm to measure distances in the Euclidean space. We focus on 2D-Euclidean metrics but all results regarding the existence of equilibria and computational complexity directly apply to higher dimensional spaces as well. Given three nodes *\ud835\udc62, \ud835\udc63,\ud835\udc64* \u2208 P in a Euclidean metric, let \u2220\ud835\udc63\ud835\udc62\ud835\udc64 be the angle of \ud835\udc62 formed by rays \u2212\u2192\n\ud835\udc62\ud835\udc63 and \u2212\u2192\n\ud835\udc62\ud835\udc64. We always consider the positive angle, which is at most \ud835\udf0b.\n\nEquilibrium Existence. First, we show that GE may not exist, modifying the proof of Theorem\n5.1 from Moscibroda, Schmid and Wattenhofer [43].\n\nTheorem 4.1. In a 2D Euclidean metric there are instances of our game that do not have a GE.\n\nProof. Modifying the proof of Theorem 5.1 from Moscibroda, Schmid and Wattenhofer [43] for\n\ud835\udc58 = 1, where \ud835\udf16 > 0 is an arbitrarily small constant, we show that there are no GE in the network in Figure 6 for \ud835\udefc = 0.6. Differing from the construction in [43], we changed \ud835\udc51(\ud835\udc4f,\ud835\udc66) to enable greedy routing. To that end, we first establish general statements about the strategies of agents in NE to show that only the strategies for agents \ud835\udc66 and \ud835\udc67 shown in Figure 7 could possibly be part of a NE.\n\nThen, we show that none of these strategies is in NE.\n\nFirst, we note that the edges (\ud835\udc4f,\ud835\udc4e), (\ud835\udc4f,\ud835\udc50), (\ud835\udc50,\ud835\udc4f), (\ud835\udc66,\ud835\udc67) and (\ud835\udc67,\ud835\udc66) have to be built to enable greedy routing, because there is no other node closer to the head of each edge than the tail of that edge. Furthermore, agent \ud835\udc4e also builds an edge to \ud835\udc4f because the only other possible greedy path via \ud835\udc50\nwould have a stretch of \ud835\udc51 (\ud835\udc4e,\ud835\udc50)+\ud835\udc51 (\ud835\udc50,\ud835\udc4f)\n\ud835\udc51 (\ud835\udc4e,\ud835\udc4f)\n= \ud835\udc51 (\ud835\udc4e,\ud835\udc50)+1\n1.14\n> 1+\ud835\udefc and thus adding the edge to \ud835\udc4f is an improving move for \ud835\udc4e. Additionally, agent \ud835\udc4e does not build an edge to \ud835\udc50 because that would improve the stretch to \ud835\udc50 by \ud835\udc51 (\ud835\udc4e,\ud835\udc4f)+\ud835\udc51 (\ud835\udc4f,\ud835\udc50)\n\ud835\udc51 (\ud835\udc4e,\ud835\udc50)\n\u2212 1 =\n2.14\n\ud835\udc51 (\ud835\udc4e,\ud835\udc50) \u2212 1 < \ud835\udefc without changing the stretch to any other agent.\n\nAnalogously, agent \ud835\udc50 does not build an edge to \ud835\udc4e because that would decrease stretches by at most\n\ud835\udc51 (\ud835\udc50,\ud835\udc4f)+\ud835\udc51 (\ud835\udc4f,\ud835\udc4e)\n\ud835\udc51 (\ud835\udc50,\ud835\udc4e)\n\u2212 1 + \ud835\udc51 (\ud835\udc50,\ud835\udc4f)+\ud835\udc51 (\ud835\udc4f,\ud835\udc4e)+\ud835\udc51 (\ud835\udc4e,\ud835\udc66)\u2212(\ud835\udc51 (\ud835\udc50,\ud835\udc4e)+\ud835\udc51 (\ud835\udc4e,\ud835\udc66))\n\ud835\udc51 (\ud835\udc50,\ud835\udc66)\n=\n2.14\n\ud835\udc51 (\ud835\udc4e,\ud835\udc50) \u2212 1 + 4.1\u2212(\ud835\udc51 (\ud835\udc4e,\ud835\udc50)+1.96)\n\ud835\udc51 (\ud835\udc50,\ud835\udc66)\n< \ud835\udefc.\n\nMoreover, agent \ud835\udc66 also builds an edge to \ud835\udc4e because the only other possible greedy path via\n\ud835\udc4f has a stretch of \ud835\udc51 (\ud835\udc66,\ud835\udc4f)+\ud835\udc51 (\ud835\udc4f,\ud835\udc4e)\n\ud835\udc51 (\ud835\udc66,\ud835\udc4e)\n= 3.14\u2212\ud835\udf16\n1.96\n> 1 + \ud835\udefc. Analogously, agent \ud835\udc66 does not build edges to both \ud835\udc4f and \ud835\udc50 because if it would, it could simply remove the edge to \ud835\udc50 and increase stretches by\n\ud835\udc51 (\ud835\udc66,\ud835\udc4f)+\ud835\udc51 (\ud835\udc4f,\ud835\udc50)\n\ud835\udc51 (\ud835\udc66,\ud835\udc50)\n=\n3\u2212\ud835\udf16\n\ud835\udc51 (\ud835\udc50,\ud835\udc66) \u2212 1 < \ud835\udefc. In fact, agent \ud835\udc66 does not build an edge to \ud835\udc50 because if they would, they could swap their edge from \ud835\udc50 to \ud835\udc4f, changing the sum of stretches by at most \ud835\udc51 (\ud835\udc66,\ud835\udc4f)+\ud835\udc51 (\ud835\udc4f,\ud835\udc50)\n\ud835\udc51 (\ud835\udc66,\ud835\udc50)\n\u2212\n\ud835\udc51 (\ud835\udc66,\ud835\udc50)+\ud835\udc51 (\ud835\udc50,\ud835\udc4f)\n\ud835\udc51 (\ud835\udc66,\ud835\udc4f)\n=\n3\u2212\ud835\udf16\n\ud835\udc51 (\ud835\udc50,\ud835\udc66) \u2212 \ud835\udc51 (\ud835\udc50,\ud835\udc66)+1\n2\u2212\ud835\udf16\n< 0.\n\nAdditionally, agent \ud835\udc67 has to build an edge to \ud835\udc4f or \ud835\udc50 because otherwise, there is no greedy path to \ud835\udc50. Agent \ud835\udc67 does not build both edges because if it did, it could remove its edge to \ud835\udc50, increasing stretches by \ud835\udc51 (\ud835\udc67,\ud835\udc4f)+\ud835\udc51 (\ud835\udc4f,\ud835\udc50)\n\ud835\udc51 (\ud835\udc67,\ud835\udc50)\n\u2212 1 =\n3\n2+\ud835\udf16 \u2212 1 < \ud835\udefc. Finally, agent \ud835\udc67 does also not build an edge to \ud835\udc4e because the stretch to \ud835\udc4e via \ud835\udc66 is already \ud835\udc51 (\ud835\udc67,\ud835\udc66)+\ud835\udc51 (\ud835\udc66,\ud835\udc4e)\n\ud835\udc51 (\ud835\udc67,\ud835\udc4e)\n= 2.96\u22122\ud835\udf16\n\ud835\udc51 (\ud835\udc67,\ud835\udc4e) < 1 + \ud835\udefc and the edge to \ud835\udc4e would not provide shorter greedy paths to \ud835\udc4f or \ud835\udc50 because \ud835\udc67 needs an edge to \ud835\udc4f or \ud835\udc50 in any case.\n\nThis leaves the potential strategies for nodes \ud835\udc66 and \ud835\udc67 shown in Figure 7. The strategies of \ud835\udc4e,\ud835\udc4f\nand \ud835\udc50 beyond the edges already discussed do not matter for the strategies for \ud835\udc66 and \ud835\udc67 because any additional edges could not be part of a greedy path starting from them. We examine all of these possible cases and show that they cannot be part of a GE.\n\nCase 1: In Figure 7a, if \ud835\udc66 adds an edge to \ud835\udc4f, the stretch to \ud835\udc4f decreases from \ud835\udc51 (\ud835\udc66,\ud835\udc4e)+\ud835\udc51 (\ud835\udc4e,\ud835\udc4f)\n\ud835\udc51 (\ud835\udc66,\ud835\udc4f)\n= 3.1\n2\u2212\ud835\udf16\nto 1 and the stretch to \ud835\udc50 from \ud835\udc51 (\ud835\udc66,\ud835\udc67)+\ud835\udc51 (\ud835\udc67,\ud835\udc4f)+\ud835\udc51 (\ud835\udc4f,\ud835\udc50)\n\n\ud835\udc51 (\ud835\udc66,\ud835\udc50)\n            =\n               4\u22122\ud835\udf16\n               \ud835\udc51 (\ud835\udc66,\ud835\udc50) to \ud835\udc51 (\ud835\udc66,\ud835\udc4f)+\ud835\udc51 (\ud835\udc4f,\ud835\udc50)\n\n\ud835\udc51 (\ud835\udc66,\ud835\udc50)\n         =\n             3\u2212\ud835\udf16\n\n                                                                              \ud835\udc51 (\ud835\udc66,\ud835\udc50) which is a total\nimprovement of more than \ud835\udefc.\n  Case 2: In Figure 7b, agent \ud835\udc67 can swap its edge from \ud835\udc4f to \ud835\udc50, changing the sum of stretches by\n\ud835\udc51 (\ud835\udc67,\ud835\udc66)+\ud835\udc51 (\ud835\udc66,\ud835\udc4f)\n\n2\n   \u2212\n       3\n\n\ud835\udc51 (\ud835\udc67,\ud835\udc4f)\n         \u2212 \ud835\udc51 (\ud835\udc67,\ud835\udc4f)+\ud835\udc51 (\ud835\udc4f,\ud835\udc50)\n\n\ud835\udc51 (\ud835\udc67,\ud835\udc50)\n         = 3\u22123\ud835\udf16\n\n                                          2+\ud835\udf16 < 0.\n  Case 3: In Figure 7c, if agent \ud835\udc66 removes its edge to \ud835\udc4f, the stretch to \ud835\udc50 stays unchanged at\n\ud835\udc51 (\ud835\udc66,\ud835\udc67)+\ud835\udc51 (\ud835\udc67,\ud835\udc50)\n\n\ud835\udc51 (\ud835\udc66,\ud835\udc50)\n         = \ud835\udc51 (\ud835\udc66,\ud835\udc4f)+\ud835\udc51 (\ud835\udc4f,\ud835\udc50)\n\n\ud835\udc51 (\ud835\udc66,\ud835\udc50)\n        , while the stretch to \ud835\udc4f increases from 1 to \ud835\udc51 (\ud835\udc66,\ud835\udc4e)+\ud835\udc51 (\ud835\udc4e,\ud835\udc4f)\n\n                                                                           \ud835\udc51 (\ud835\udc66,\ud835\udc4f)\n                                                                                     =\n                                                                                        3.1\n                                                                                       2\u2212\ud835\udf16 which is\nan increase of less than \ud835\udefc.\n  Case 4: In Figure 7d, agent \ud835\udc67 can swap their edge from \ud835\udc50 to \ud835\udc4f, changing the sum of stretches by\n\ud835\udc51 (\ud835\udc67,\ud835\udc4f)+\ud835\udc51 (\ud835\udc4f,\ud835\udc50)\n\n\ud835\udc51 (\ud835\udc67,\ud835\udc50)\n         \u2212 \ud835\udc51 (\ud835\udc67,\ud835\udc50)+\ud835\udc51 (\ud835\udc50,\ud835\udc4f)\n\n\ud835\udc51 (\ud835\udc67,\ud835\udc4f)\n         =\n            3\n\n2+\ud835\udf16 \u2212 3+\ud835\udf16\n\n                                       2\n                                          < 0.\nThus, there can be no GE in this instance.\n                                                                                                               \u25a1\n\nComputational Complexity. Next, we show that finding a best response is computationally hard.\n\nTheorem 4.2. In a 2D Euclidean metric, computing a best response is NP-hard.\n\nProof. We reduce from Set Cover and show that, if the number of edges of an agent's best response could be computed in polynomial time, then the size of a minimum set cover could also be found in polynomial time, which would imply P = NP.\n\nGiven an instance of $\\operatorname{S\\pi}$r $\\operatorname{Cover}P=(\\{x_{1},...x_{n}\\},(Q_{1},...,Q_{m}))$, we construct a bipartite graph analogously to the proof of Theorem 3.6. Then, by using the construction as given in Figure 8 and setting $\\sigma>4$, the reduction from $\\operatorname{S\\pi}$r $\\operatorname{Cover}$ follows by an almost verbatim repeating of the proof of Theorem 3.6.\n\nWe use the article as given in Figure 8 a. Moreover, for the minimal and maximal stretch gain we have $\\delta=\\frac{d(x_{i}Q_{i})\\circ d(Q_{i}x_{i})}{d(x_{i}x_{i})}-\\frac{d(x_{i})}{d(x_{i})}=\\frac{4}{12}$ and $\\Delta=\\frac{d(u_{i}\\circ u)\\circ d(u_{i}Q_{i})}{d(u_{i}Q_{i})}-\\frac{d(u_{i}Q_{i})}{d(u_{i}Q_{i})}=\\frac{4}{5}$ respectively.\n\n17 and \u0394 = \ud835\udc51 (\ud835\udc62,\ud835\udc63)+\ud835\udc51 (\ud835\udc63,\ud835\udc44 \ud835\udc57 )\n\ud835\udc51 (\ud835\udc62,\ud835\udc65\ud835\udc56 )\n\u2212 \ud835\udc51 (\ud835\udc65\ud835\udc56 )\n\ud835\udc51 (\ud835\udc65\ud835\udc56 ) = 4\n\nhave $\\delta=\\frac{d(u_{Q})_{J}*d(Q_{j},\\omega_{I})}{d(u_{\\text{LC}})}-\\frac{d(u_{I})}{d(\\omega_{I})}=\\frac{4}{1}$ and $\\Delta=\\frac{d(u_{P})*d(u_{Q})_{I}}{d(u_{Q})_{I}}-\\frac{d(u_{Q})_{I}}{d(u_{Q})_{I}}=\\frac{4}{9}$ respectively.\n\nThis in conjunction with similar calculations as carried out in Equation (4) and Equation (5) gives for the best response $B$ and the potential min set over $D$\n\n$$\\text{stretch}_{\\text{out}}(D)-\\text{stretch}_{\\text{out}}(B)<\\frac{4}{9}|B|-\\frac{4}{17}|D|$$ $$<|(B-|D|)\\alpha=\\text{edges}_{u}(B)-\\text{edges}_{u}(D),$$\n\nwhere we made use of $|D|\\leq|B|-1$ in conjunction with $\\alpha>4$. We conclude that strategy $D$ is an improvement in total. Hence, if a best response could be found in polynomial time, then a minimum size set over could be found in polynomial time, because our reduction is computable in polynomial time as well.\n\nApproximate Equilibria. Since GE do not always exist and finding a best response is computationally hard, approximate equilibria are only remaining option to construct almost stable networks in polynomial time. To that end, we employ \u0398\ud835\udc58-graphs for 2D-Euclidean metrics.\n\nFirst introduced independently by Clarkson [18] and Keil [36], \u0398\ud835\udc58-graphs are constructed as follows: Each node \ud835\udc62 partitions the plane into \ud835\udc58 disjoint cones with itself as the apex, each having an aperture of 2\ud835\udf0b\n\ud835\udc58 . Then, for each cone, node \ud835\udc62 adds an edge to the node \ud835\udc63 whose projection onto the bisector of the cone is closest to \ud835\udc62.\n\n\u0398-routing is a way of selecting paths in a \u0398\ud835\udc58-graph. With this, to get from a node \ud835\udc62 to a node \ud835\udc63, the edge is used that \ud835\udc62 created into the cone that contains node \ud835\udc63. This procedure is repeated for each node until node \ud835\udc63 is reached. First, we show that if \ud835\udc58 is too small, \u0398\ud835\udc58-graphs are not suited as approximate NEs. This result is well-known [44], but we prove it for the sake of completeness.\n\nTheorem 4.3. For every \ud835\udc58 \u2264 5, there exist 2D-Euclidean metrics where the \u0398\ud835\udc58 graph with directed edges does not enable greedy routing.\n\nProof. We construct a 2D-Euclidean metric by placing nodes in a polar coordinate system. For now, we assume that the reference direction of the coordinate system is equal to the bisector of some cone used in the construction of the \u0398\ud835\udc58-graph. The resulting metric is illustrated in Figure 9.\n\nLet \ud835\udc62 be located in the origin. Moreover, let \ud835\udc63 be at distance 1 and angle \u2212 7\ud835\udf0b\n36 , and \ud835\udc64 at distance\n1 + \ud835\udf16 and angle 7\ud835\udf0b\n36 < \ud835\udf0b\n36 . We call this construction \ud835\udc36. Since both \ud835\udc63 and \ud835\udc64 are in the same cone for \ud835\udc62 if\n\ud835\udc58 \u2264 5 (because 7\ud835\udf0b\n5 ) and \ud835\udc63's projection on the bisector of that cone is closer to \ud835\udc62 than that of \ud835\udc64, agent \ud835\udc62 does not build an edge to \ud835\udc64. But since \ud835\udc51(\ud835\udc63,\ud835\udc64) > \ud835\udc51(\ud835\udc62,\ud835\udc64), agent \ud835\udc62 cannot use \ud835\udc63 on a greedy path to \ud835\udc64 and thus cannot have a greedy path to node \ud835\udc64.\n\nIn a slightly modified construction, even a global rotation of the cones (i.e. the reference direction of the coordinate system not lining up with the bisector of any cone) cannot achieve better results: First, we note that with cone-rotations of less than \ud835\udf0b\n\ud835\udc58 \u2212 7\ud835\udf0b\n36 in either direction, the same cones stay occupied by nodes and thus the same argumentation still holds. Additionally, for any \ud835\udefd \u2208 R, a rotation by \ud835\udefd is equal to a rotation by \ud835\udefd mod 2\ud835\udf0b\n\ud835\udc58 . Thus, we place \ud835\udc5a = 2\ud835\udf0b\n\ud835\udc58 /( \ud835\udf0b\n\ud835\udc58 \u2212 7\ud835\udf0b\n36 ) copies of \ud835\udc36, which we call \ud835\udc361*, ...\ud835\udc36*\ud835\udc5a. Each \ud835\udc36\ud835\udc56+1 is rotated by \ud835\udf0b\n\ud835\udc58 \u2212 7\ud835\udf0b\n36 , compared to \ud835\udc36\ud835\udc56, and the distance between the centers of any \ud835\udc36\ud835\udc56 and \ud835\udc36\ud835\udc56\u2032 is at least \ud835\udc4f = 4. With this, in any rotation there is a \ud835\udc62\ud835\udc56 in some \ud835\udc36\ud835\udc56 for which their \ud835\udc63\ud835\udc56 and \ud835\udc64\ud835\udc56 are in the same cone. Since all nodes from other \ud835\udc36\ud835\udc56\u2032 have a distance of at least\n\ud835\udc4f \u2212 2 \u00b7 \ud835\udc51(\ud835\udc62,\ud835\udc64) = 2 \u2212 2\ud835\udf16 to \ud835\udc64\ud835\udc56, agent \ud835\udc62\ud835\udc56 cannot use them on a greedy path \ud835\udc64\ud835\udc56 either and thus \ud835\udc62 has no greedy path to \ud835\udc64\ud835\udc56.\n\n\u25a1\nWith this limitation in mind, we give a general upper bound on the approximation ratio; although this leaves the case of\ud835\udc58 = 6 open for now. Let \ud835\udc53 (\ud835\udc58) =\n1\n1\u22122\ud835\udc60\ud835\udc56\ud835\udc5b( \ud835\udf0b\n\ud835\udc58 ) be the maximum stretch of \u0398-routing in a \u0398\ud835\udc58-graph with 6 < \ud835\udc58 < \ud835\udc5b [46].\n\nTheorem 4.4. For 6 < \ud835\udc58 < \ud835\udc5b*, every 2D-Euclidean instance of our game has a* \ud835\udc53 (\ud835\udc58) + \ud835\udefc\n\ud835\udc58\n\ud835\udc5b\u22121-NE.\n\nProof. Consider the \u0398\ud835\udc58-graph on P. With 6 < \ud835\udc58 < \ud835\udc5b, the stretch between any two nodes is at most \ud835\udc53 (\ud835\udc58) with \u0398-routing, which gives a greedy path. The best response of an agent has costs of at least \ud835\udc5b \u2212 1, because the stretch to every other node is at least 1. Thus, the \u0398\ud835\udc58-graph constitutes a\n\ud835\udc53 (\ud835\udc58) + \ud835\udefc\n\ud835\udc58\n\ud835\udc5b\u22121-approximate NE.\n\n\u25a1\nWhile this does not yield a constant approximation ratio, we note that, as \ud835\udc5b \u2192 \u221e, the approximation ratio goes to \ud835\udc53 (\ud835\udc58), which can be arbitrarily close to 1; for \ud835\udc58 \u2265 15, it is below 2.\n\nIn the following, we establish a baseline constant factor approximation.\n\nLemma 4.5. Every 2D-Euclidean instance of the game has a 5-approximate NE.\n\n4\ud835\udc58+4 )\nProof. Consider the \u03988-graph on P. By Bose, De Carufel, Morin, van Renssen and Verdonschot [13], \u0398-routing in any \u03984\ud835\udc58+4-graph gives stretches of at most 1 +\n2 sin(\n\ud835\udf0b\ncos(\n\ud835\udf0b\n4\ud835\udc58+4 )\u2212sin(\n\ud835\udf0b\n4\ud835\udc58+4 ) . Thus, the\n8 )\nmaximum stretch of \u0398-routing in the \u03988-graph is 1 +\n2 sin( \ud835\udf0b\ncos( \ud835\udf0b\n8 )\u2212sin( \ud835\udf0b\n8 ) = 1 +\n\u221a\n2 , because otherwise\n2, which yields a greedy path. In the best response of an agent, its stretch to any other agent is at least 1.\n\nEvery agent \ud835\udc62 for whom the other agents are not within a cone with angle at most \ud835\udf0b must build at least 2 edges in its best response. This stems from the fact that an edge to any node \ud835\udc63 can only be part of a greedy path to a node \ud835\udc56 with \u2220\ud835\udc63\ud835\udc62\ud835\udc56 \u2264 \ud835\udf0b\n\ud835\udc51(\ud835\udc62,\ud835\udc56)2 = \ud835\udc51(\ud835\udc62,\ud835\udc56),\n\ud835\udc51(\ud835\udc63,\ud835\udc56) =\n\u221a\ufe01\n\ud835\udc51(\ud835\udc62,\ud835\udc56)2 + \ud835\udc51(\ud835\udc62, \ud835\udc63)2 \u2212 2\ud835\udc51(\ud835\udc62,\ud835\udc56)\ud835\udc51(*\ud835\udc62, \ud835\udc63*) cos(\u2220\ud835\udc63\ud835\udc62\ud835\udc56) >\n\u221a\ufe01\n\nby the law of cosines and as such the path would not be a greedy path.\n\nFor every agent $u$ for whom the other agents are within a cone with angle at most $\\pi$, at least three cosines of the $\\Theta_{5}$-graph are empty and as such agent $u$ only builds at most five edges in the $\\Theta_{5}$-graph.\n\nFinally, we consider our stretch function. Edgecos are at least $\\alpha$ or $2\\alpha$ in the best response, and at least $\\alpha$ or $8\\alpha$ in the $\\Theta_{5}$-graph, depending on whether all other agents are within a cone with a angle at most $\\pi$ or not.\n\nLet $u\\in\\mathcal{P}$. Furthermore, let $\\mathbf{s}_{0}$ be the strategy profiles of the $\\Theta_{5}$-graph in a metric, where for agent $u$ not all other agents are within a cone with angle at most $\\pi$. Also, let $\\mathbf{s}_{0}^{\\alpha}$ be the strategy of the $\\Theta_{5}$-graph where all other agents are within a cone with angle at most $\\pi$. Let $\\mathbf{s}_{0r}$ and $\\mathbf{s}_{0r}^{\\beta}$ be the corresponding strategy profiles, where agent $u$'s strategy is changed to its best response, while all other strategies stay unchanged.\n\nFor our stretch protocol, we get that the $\\Theta_{5}$-graph is a\n\n$$\\max\\left(\\frac{c_{u}(\\mathbf{s}_{0r})}{c_{u}(\\mathbf{s}_{0r})},\\frac{c_{u}(\\mathbf{s}_{0r}^{\\alpha})}{c_{u}(\\mathbf{s}_{0r}^{\\beta})}\\right)=\\max\\left(\\frac{8\\alpha+(1+\\sqrt{2})(n-1)}{2\\alpha+(n-1)},\\frac{5\\alpha+(1+\\sqrt{2})(n-1)}{\\alpha+(n-1)}\\right)\\leq5$$\n2 in the \u03988-graph.\n\n\u25a1\n\napproximate NE, because the stretch to all $n-1$ other agents is at least $1$ in a best response and at most $1+\\sqrt{2}$ in the $\\Theta_{8}$-graph.\n\nThe following theorem gives a lower bound on the approximation ratio of \u0398\ud835\udc58-graphs. For the\n\u03988-graphs we used in the last theorem, this bound is tight.\n\nTheorem 4.6. There are 2D-Euclidean instances of our game, where the \u0398\ud835\udc58-graph is not a (\u2308\ud835\udc58\n2 \u2309 +\n1 \u2212 \ud835\udf16)-approximate NE.\n\nProof. We construct a 2D-Euclidean metric by placing nodes in a polar coordinate system.\n\nFor now, we assume that the reference direction of the coordinate system is equal to either the bisector of some cone used in the construction of the \u0398\ud835\udc58-graph if \u2308\ud835\udc58\n5\ud835\udc58 ; \ud835\udf0b\n2 \u2309 + 1 is odd or the edge of a cone otherwise. Let \ud835\udc62 be located at the origin and let \ud835\udc63 be at distance 1 and angle 0. Let the nodes\n\ud835\udc641, ...,\ud835\udc64\u2308 \ud835\udc58\n2 \u2309+1 be at angles evenly spaced out over the interval [\u2212 \ud835\udf0b\n2 + 2\ud835\udf0b\n2 \u2212 2\ud835\udf0b\n5\ud835\udc58 ] and at distances\n1\n2 and thus cos(\u2220\ud835\udc63\ud835\udc62\ud835\udc64\ud835\udc56) > 0). We call this construction \ud835\udc36.\n\ncos(\u2220\ud835\udc63\ud835\udc62\ud835\udc64\ud835\udc56 ) (this is possible, as \u2220\ud835\udc63\ud835\udc62\ud835\udc64\ud835\udc56 < \ud835\udf0b\nAgent \ud835\udc62 builds edges to \u2308\ud835\udc58\n2 \u2309 + 1 nodes in the \u0398\ud835\udc58-graph because each \ud835\udc64\ud835\udc56 is in a different cone. For all \ud835\udc56, we have, by the law of cosines, that\n\ud835\udc51(\ud835\udc62,\ud835\udc64\ud835\udc56)2 \u2212 1 < \ud835\udc51(\ud835\udc62,\ud835\udc64\ud835\udc56).\n\n12 + \ud835\udc51(\ud835\udc62,\ud835\udc64\ud835\udc56)2 \u2212 2 \u00b7 1 \u00b7 \ud835\udc51(\ud835\udc62,\ud835\udc64\ud835\udc56) cos(\u2220\ud835\udc63\ud835\udc62\ud835\udc64\ud835\udc56) =\n\u221a\ufe01\n\ud835\udc51(\ud835\udc63,\ud835\udc64\ud835\udc56) =\n\u221a\ufe01\nAs such, agent \ud835\udc63 cannot use \ud835\udc62 on greedy paths to any \ud835\udc64\ud835\udc56, whereas \ud835\udc62 can use \ud835\udc63 for all of them. If \ud835\udc63\nwould not have a greedy path to some \ud835\udc64\ud835\udc56, this could not be a (\u2308\ud835\udc58\n2 \u2309 + 1 \u2212\ud835\udf16)-approximate NE because adding edges to all \ud835\udc64\ud835\udc56 without a greedy path would improve \ud835\udc63's costs from at least \ud835\udc4d to less than \ud835\udc4d, which by definition of \ud835\udc4d is a large improvement, also by more than a factor of (\u2308\ud835\udc58\n2 \u2309 + 1 \u2212 \ud835\udf16). Thus, agent \ud835\udc62 could replace all of its edges with an edge to \ud835\udc63 and still retain greedy paths to all nodes. Let\n\ud835\udc60\ud835\udc50 and \ud835\udc60\ud835\udc50\u2032 be agent \ud835\udc62's stretchcosts before and after this move. Agent \ud835\udc62's total costs would improve by a factor of\n(\u2308 \ud835\udc58\n2 \u2309+1)\ud835\udefc+\ud835\udc60\ud835\udc50\u2032\n2 \u2309+1)\ud835\udc60\ud835\udc50\u2212\ud835\udc60\ud835\udc50\u2032\u2212\ud835\udf16\n\ud835\udefc+\ud835\udc60\ud835\udc50\nwhich is at least \u2308\ud835\udc58\n2 \u2309 + 1 \u2212 \ud835\udf16 for \ud835\udefc \u2265\n(\u2308 \ud835\udc58\n\ud835\udf16\n.\n\nIn a slightly modified construction, even a global rotation of the cones (i.e. the reference direction of the coordinate system not lining up with the bisector/edge of any cone) cannot achieve better results: First, we note that with cone-rotations of less than 4\ud835\udf0b\n5\ud835\udc58 in either direction, the same cones stay occupied by nodes and as such, this construction still holds. Also, a rotation by \ud835\udefd is equal to a rotation by \ud835\udefd mod 2\ud835\udf0b\n\ud835\udc58 . Thus, we place two copies of \ud835\udc36, which we call \ud835\udc361 and \ud835\udc362. The copy \ud835\udc362 is rotated by \ud835\udc56 2\ud835\udf0b\n\ud835\udc58 + \ud835\udf0b\n\ud835\udc58 , for some \ud835\udc56 \u2208 N, compared to \ud835\udc361, and its center is displaced. With this, in any rotation, one of \ud835\udc621 or \ud835\udc622 still has to build \u2308\ud835\udc58\n2 \u2309 + 1 many edges. Additionally, by placing the \ud835\udc361 and\n\ud835\udc362 far enough apart and choosing \ud835\udc56 for the rotation to ensure that they are each contained in cones of \ud835\udc62 of the other that are occupied by some \ud835\udc64\ud835\udc56, these do not impact the number of edges agent \ud835\udc62\nbuilds in the \u0398\ud835\udc58-graph or needs to build in its best response.\n\n\u25a1\nThus, we cannot get a better bound on the approximation ratio of \u03988-graphs. However, the approximation factor does not improve by choosing a smaller \ud835\udc58: With \ud835\udc58 = 7 being an odd number, Theorem 4.6 still gives the same lower bound of 5 \u2212 \ud835\udf16. With \ud835\udc58 = 6 the known bound on the stretch goes up to at least 7 (and that is not along necessarily greedy paths; to get greedy paths the stretch might be as large as the bound on \u0398-routing of 12\n\u221a\n3) [3]. For smaller values of \ud835\udc58, by Theorem 4.3, there might be no greedy paths between some nodes. But we can achieve a lower approximation ratio by using \ud835\udc58 = 6 or \ud835\udc58 = 8, depending on the instance, which gives the following result.\n\n2\u221260\n\u221a\nTheorem 4.7. *Every 2D-Euclidean instance of our game has a* 4+4\n\u221a\n3\n\u221a\n3\n\u2248 4.87-approximate NE.\n\n2\u221212\n\u221a\nProof. First, we note that in the \u03986-graph on P, the maximum stretch is 12\n\u221a\n\nProof.: First, we note that in the $\\Theta_{0}$-graph on $\\mathcal{P}$, the maximum stretch is $12\\sqrt{3}$ with $\\Theta$-routing [3], which gives greedy paths.\n\nLet $u\\in\\mathcal{P}$. Furthermore, let $\\mathbf{s_{0}}$ be the strategy profiles of the $\\Theta_{k}$-graph in a metric where for agent $n$ out all other agents are within a cone with angle at most $\\pi$ and let $\\mathbf{s_{0}^{\\pi}}$ be the strategy profiles of the $\\Theta_{k}$-graph if all other agents are within a cone with angle at most $\\pi$. Let $\\mathbf{s_{0}}$ and $\\mathbf{s_{0}^{\\pi}}$ be the corresponding strategy profiles, where $u$'s strategy is changed to its best response, while all other strategies stay unpattern is.\n\nUsing the same argument as in Lemma 4.5, we get that the $\\Theta_{0}$-graph is a\n\n$$\\max\\left(\\frac{c_{u}(s_{0})}{c_{u}(s_{0})},\\frac{c_{u}(s_{0}^{\\pi})}{c_{u}(s_{0}^{\\pi})}\\right)=\\max\\left(\\frac{6\\alpha+12\\sqrt{3}(n-1)}{2\\alpha+(n-1)},\\frac{4\\alpha+12\\sqrt{3}(n-1)}{\\alpha+(n-1)}\\right)$$\n\n-approximate NE. Next, we consider two cases:\n\nIf $\\alpha\\geq(12\\sqrt{3}-\\sqrt{2}-1)(n-1)$. Thus, $n\\leq\\frac{1}{12\\sqrt{3}}$ $\\frac{6\\alpha+12\\sqrt{3}(n-1)}{\\alpha+(n-1)}$, $\\frac{4\\alpha+12\\sqrt{3}(n-1)}{\\alpha+(n-1)}$\n\n$$\\leq\\max\\left(\\frac{6\\alpha+12\\sqrt{3}(\\frac{\\alpha+1}{12\\sqrt{3}-\\sqrt{2}-1}-1)}{2\\alpha+(\\frac{\\alpha+1}{12\\sqrt{3}-\\sqrt{2}-1}-1)},\\frac{4\\alpha+12\\sqrt{3}(\\frac{\\alpha+1}{12\\sqrt{3}-\\sqrt{2}-1}-1)}{\\alpha+(\\frac{\\alpha+1}{12\\sqrt{3}-\\sqrt{2}-1}-1)}\\right)$$ $$\\leq\\frac{4+4\\sqrt{2}-60\\sqrt{3}}{\\sqrt{2}-12\\sqrt{3}}$$\n3 \u2212\n\u221a\n\n$\\overline{2}-1)(n-1)$. Then we choose the $\\Theta_{8}$-graph and obtain that it is a \n-approximate NE.\n\nIf \ud835\udefc \u2264 (12\n\u221a\n\n$\\cdot$ 1). Then we\n\n$$\\max\\left(\\frac{8\\alpha+(1+\\sqrt{2})(n-1)}{2\\alpha+(n-1)},\\frac{5\\alpha+(1+\\sqrt{2})(n-1)}{\\alpha+(n-1)}\\right)$$ $$\\leq\\max\\left(\\frac{8(12\\sqrt{3}-\\sqrt{2}-1)(n-1)+(1+\\sqrt{2})(n-1)}{2(12\\sqrt{3}-\\sqrt{2}-1)(n-1)+(n-1)},\\right.$$ $$\\left.\\left.\\frac{5(12\\sqrt{3}-\\sqrt{2}-1)(n-1)+(1+\\sqrt{2})(n-1)}{(12\\sqrt{3}-\\sqrt{2}-1)(n-1)+(n-1)}\\right)\\right.$$ $$=\\frac{4+4\\sqrt{2}-60\\sqrt{3}}{\\sqrt{2}-12\\sqrt{3}}$$\n\n-approximate NE.\n\nFrom Theorem 4.6, we immediately get a lower bound of 4 \u2212 \ud835\udf16 for this construction. Improving the lower bound for constructions that involve \u03986-graphs is challenging, since any improvement would also imply an improved lower bound on the stretch factor of the \u03986-graph itself, for which the best known bound is also 4 \u2212 \ud835\udf16 [3].\n"
    },
    {
        "level": "##",
        "title": "5 General Metrics",
        "content": "\nIn this section, we study our model in general metric spaces. Naturally, all negative results from the preceding sections, like hardness and non-convergence results, immediately carry over. Specifically, the results that are not implicit in the proofs in this section is that computing best responses is NP-hard, that GE are not \u03a9( \ud835\udefc\ud835\udc5b\n\ud835\udefc+\ud835\udc5b) -approximate NE and that GE may not exist.\n\nHardness of the Existence of Equilibria. Here, we show that deciding whether GE and NE exist in a given instance with an arbitrary metric is NP-hard.\n\nTheorem 5.1. In general metric spaces, is both NP-hard to decide, whether an instance admits a NE\nand whether it admits a GE.\n\nProof. We modify the proof for Theorem 6.1 from Moscibroda, Schmid and Wattenhofer [43]\nfor \ud835\udc58 = 1 by changing the distances but retaining the same general structure of the space.\n\nWe reduce from the NP-complete 3-SAT variant, where each variable occurs in at most three clauses (with clauses with fewer than three literals being allowed) [47].\n\nLet I be such a 3-SAT instance with variables X and clauses C. We use the same reduction function for both NE and GE and first show that the resulting instance has no GE, if there is no satisfying assignment of I and then, that it has a NE otherwise. This suffices, as every NE is a GE.\n\nWe construct a metric space with nodes {*\ud835\udc66,\ud835\udc67,\ud835\udc51*} \u222a {\ud835\udc4e\ud835\udc56,\ud835\udc4f\ud835\udc56,\ud835\udc50\ud835\udc56 | \ud835\udc56 \u2264 |C|} \u222a {\ud835\udc61\ud835\udc62, \ud835\udc53\ud835\udc62 | \ud835\udc62 \u2264 |X|} with distances as shown in Figure 10, such that \ud835\udc51(\ud835\udc50\ud835\udc56,\ud835\udc61\ud835\udc62) = 1.6 \u2212 \ud835\udf16 for all positive literals \ud835\udc65\ud835\udc62 in \ud835\udc36\ud835\udc56 and\n\ud835\udc51(\ud835\udc50\ud835\udc56, \ud835\udc53\ud835\udc62) = 1.6 \u2212 \ud835\udf16 for all negative literals \ud835\udc65\ud835\udc62 in \ud835\udc36\ud835\udc56. Furthermore, let \ud835\udefc = 0.6.\n\nFirst, we note some general properties of NE and GE in this instance. We show that for every\n\ud835\udc62 \u2264 |X|, agent \ud835\udc67 builds exactly one edge to either \ud835\udc61\ud835\udc62 or \ud835\udc53\ud835\udc62 in any GE. Assume at first, that \ud835\udc67 does not build an edge to either of these nodes. In this case, agent \ud835\udc67's stretch to both nodes is at least\n\ud835\udc51 (\ud835\udc67,\ud835\udc50\ud835\udc56 )+\ud835\udc51 (\ud835\udc50\ud835\udc56,\ud835\udc61\ud835\udc62 )\n\ud835\udc51 (\ud835\udc67,\ud835\udc61\ud835\udc62 )\n= 3.6\n1.6 > 1 + \ud835\udefc (each via some \ud835\udc50\ud835\udc56 that is at distance 1.6 \u2212 \ud835\udf16 to it) and adding one of the edges would be an improving move. Now, assume that \ud835\udc67 builds an edge to both nodes. Since every variable appears in at most three clauses, one of \ud835\udc61\ud835\udc62 or \ud835\udc53\ud835\udc62 has at most one \ud835\udc50\ud835\udc56 at distance 1.6 \u2212 \ud835\udf16. If one of them has no \ud835\udc50\ud835\udc56 at distance 1.6 \u2212 \ud835\udf16, removing the edge to it would only increase the stretch to it by \ud835\udc51 (\ud835\udc67,\ud835\udc53\ud835\udc62 )+\ud835\udc51 (\ud835\udc53\ud835\udc62,\ud835\udc61\ud835\udc62 )\n\ud835\udc51 (\ud835\udc67,\ud835\udc61\ud835\udc62 )\n\u2212 1 = 2.45\n1.6 \u2212 1 < \ud835\udefc. Let, w.l.o.g., \ud835\udc61\ud835\udc62 only have \ud835\udc50\ud835\udc56 at distance 1.6 \u2212\ud835\udf16. If \ud835\udc67 has a path of length at most 3.2 \u2212\ud835\udf16 to \ud835\udc50\ud835\udc56 that does not include \ud835\udc61\ud835\udc62, then agent \ud835\udc67 could remove the edge to \ud835\udc61\ud835\udc62 and only the stretch to \ud835\udc61\ud835\udc62 would increase from 1 to \ud835\udc51 (\ud835\udc67,\ud835\udc53\ud835\udc62 )+\ud835\udc51 (\ud835\udc53\ud835\udc62,\ud835\udc61\ud835\udc62 )\n\ud835\udc51 (\ud835\udc67,\ud835\udc61\ud835\udc62 )\n= 2.45\n1.6 which is an increase of less than \ud835\udefc while the stretch to \ud835\udc50\ud835\udc56 would not increase. If \ud835\udc67 does not have a path of length at most 3.2 \u2212 \ud835\udf16\nto \ud835\udc50\ud835\udc56, that does not include \ud835\udc61\ud835\udc62, then agent \ud835\udc67 could swap the edge from \ud835\udc61\ud835\udc62 to \ud835\udc50\ud835\udc56 to increase the stretch to \ud835\udc61\ud835\udc62 from 1 to \ud835\udc51 (\ud835\udc67,\ud835\udc53\ud835\udc62 )+\ud835\udc51 (\ud835\udc53\ud835\udc62,\ud835\udc61\ud835\udc62 )\n1.6 and decrease the stretch to \ud835\udc50\ud835\udc56 from at least 3.2\u2212\ud835\udf16\n\ud835\udc51 (\ud835\udc67,\ud835\udc61\ud835\udc62 )\n= 2.45\n\ud835\udc51 (\ud835\udc67,\ud835\udc50\ud835\udc56 ) = 3.2\u2212\ud835\udf16\n2+\ud835\udf16 to 1\nwhich is an improvement in total.\n\nThus, we have that for every \ud835\udc62 \u2264 |X|, agent \ud835\udc67 builds exactly one edge to either \ud835\udc61\ud835\udc62 or \ud835\udc53\ud835\udc62 in any GE.\n\nWe also note that in any GE, for all *\ud835\udc56,\ud835\udc62*, the edges (\ud835\udc4f\ud835\udc56,\ud835\udc50\ud835\udc56), (\ud835\udc50\ud835\udc56,\ud835\udc4f\ud835\udc56), (\ud835\udc4f\ud835\udc56,\ud835\udc4e\ud835\udc56), (\ud835\udc66,\ud835\udc67), (\ud835\udc67,\ud835\udc66), (\ud835\udc61\ud835\udc62, \ud835\udc53\ud835\udc62),\n(\ud835\udc53\ud835\udc62,\ud835\udc61\ud835\udc62), (\ud835\udc4e\ud835\udc56,\ud835\udc51), (\ud835\udc4f\ud835\udc56,\ud835\udc51), (\ud835\udc50\ud835\udc56,\ud835\udc51), (\ud835\udc61\ud835\udc62,\ud835\udc51) and (\ud835\udc53\ud835\udc62,\ud835\udc51) have to be built to enable greedy routing because there are, respectively, no other nodes closer to the second node than the first node itself. Furthermore, every \ud835\udc4e\ud835\udc56 also builds an edge to \ud835\udc4f\ud835\udc56: If there was no edge to \ud835\udc4f\ud835\udc56, agent \ud835\udc4e\ud835\udc56 would need to build an edge to \ud835\udc50\ud835\udc56 to have a greedy path to \ud835\udc4f\ud835\udc56. Then, swapping that edge to \ud835\udc4f\ud835\udc56 would decrease the stretch to\n\ud835\udc4f\ud835\udc56 by \ud835\udc51 (\ud835\udc4e\ud835\udc56,\ud835\udc50\ud835\udc56 )+\ud835\udc51 (\ud835\udc50\ud835\udc56,\ud835\udc4f\ud835\udc56 )\n\ud835\udc51 (\ud835\udc4e\ud835\udc56,\ud835\udc4f\ud835\udc56 )\n\u22121 = 3.14\n1.14 \u22121 > 0 while not changing the stretch to \ud835\udc50\ud835\udc56 and thus be an improving move.\n\nAgent \ud835\udc66 also builds an edge to every \ud835\udc4e\ud835\udc56 because the only other possible greedy paths via \ud835\udc4f\ud835\udc56 and \ud835\udc51\nhave stretches of \ud835\udc51 (\ud835\udc66,\ud835\udc4f\ud835\udc56 )+\ud835\udc51 (\ud835\udc4f\ud835\udc56,\ud835\udc4e\ud835\udc56 )\n1.96\n> 1 + \ud835\udefc and \ud835\udc51 (\ud835\udc66,\ud835\udc51)+\ud835\udc51 (\ud835\udc51,\ud835\udc4e\ud835\udc56 )\n\ud835\udc51 (\ud835\udc66,\ud835\udc4e\ud835\udc56 )\n= 3.14\u2212\ud835\udf16\n\ud835\udc51 (\ud835\udc66,\ud835\udc4e\ud835\udc56 )\n= 4.56\n1.96 > 1 + \ud835\udefc. Agent \ud835\udc66 does not build an edge to both \ud835\udc4f\ud835\udc56 and \ud835\udc50\ud835\udc56, for any \ud835\udc56, because if it would do so, it could simply remove the edge to \ud835\udc50\ud835\udc56 and increase stretches by at most \ud835\udc51 (\ud835\udc66,\ud835\udc4f\ud835\udc56 )+\ud835\udc51 (\ud835\udc4f\ud835\udc56,\ud835\udc50\ud835\udc56 )\n\ud835\udc51 (\ud835\udc66,\ud835\udc50\ud835\udc56 )\n\u2212 1 = 3\u2212\ud835\udf16\n2+2\ud835\udf16 \u2212 1 < \ud835\udefc, because the shortest paths to any \ud835\udc61\ud835\udc62 and \ud835\udc53\ud835\udc62 use \ud835\udc67 in either case. In fact, agent \ud835\udc66 does not build an edge to any \ud835\udc50\ud835\udc56, because if it would do so, it could swap its edge from \ud835\udc50\ud835\udc56 to \ud835\udc4f\ud835\udc56, changing the sum of stretches by at most\n\n$$\\frac{d(y,b_{i})+d(b_{i},x_{i})}{d(y,x_{i})}-\\frac{d(y,c_{i})+d(c_{i},b_{i})}{d(y,b_{i})}=\\frac{3-\\epsilon}{2+2\\epsilon}-\\frac{3+2\\epsilon}{2-\\epsilon}<0.$$\nNow, let there be no satisfying assignment for I. We show that there is no GE in our instance.\n\nAssume for the sake of contradiction that there is a GE. Since for every \ud835\udc62 \u2264 |X|, agent \ud835\udc67 builds exactly one edge to either \ud835\udc61\ud835\udc62 or \ud835\udc53\ud835\udc62 in any GE and there is no satisfying assignment, there has to be some \ud835\udc50\ud835\udc56, where \ud835\udc67 does not have an edge to a \ud835\udc61\ud835\udc62 or \ud835\udc53\ud835\udc62 at distance 1.6 \u2212\ud835\udf16. Let \ud835\udc56 be such that this is true for \ud835\udc50\ud835\udc56. For there to be a greedy path to \ud835\udc50\ud835\udc56, agent \ud835\udc67 needs to build an edge to \ud835\udc4f\ud835\udc56, \ud835\udc50\ud835\udc56 or \ud835\udc51. In fact, if \ud835\udc67 does not build an edge to \ud835\udc4f\ud835\udc56 or \ud835\udc50\ud835\udc56 but only to \ud835\udc51, the stretch to \ud835\udc50\ud835\udc56 would be \ud835\udc51 (\ud835\udc67,\ud835\udc51)+\ud835\udc51 (\ud835\udc51,\ud835\udc50\ud835\udc56 )\n\ud835\udc51 (\ud835\udc67,\ud835\udc50\ud835\udc56 )\n= 4.1\n\ndoes not build an edge to $b_{i}$ or $c_{i}$ but only to $\\overline{d}$, the stretch to $c_{i}$ would be $\\overline{d(z_{i}d)*d(k_{i}a_{i})}=\\frac{4.1}{2*\\epsilon}>1+\\alpha$. As such, agent $z$ builds an edge to $b_{i}$ or $c_{i}$ Agent $z$ does not build both edges because if it did, it could remove its edge to $c_{i}$ and increase thresholds by\n\n$$\\frac{d(z,b_{i})+d(b_{i},c_{i})}{d(z,c_{i})}-1=\\frac{3}{2+\\epsilon}-1<\\alpha.$$\n\nAgent $z$ also does not build an edge to $a_{i}$, because the stretch to $a_{i}$ via $y$ is already $\\frac{d(z,y)+d(y,a_{i})}{d(z,a_{i})}=\\frac{2*6-2\\epsilon}{2+2\\epsilon}<1+\\alpha$ and the edge to $a_{i}$ would not allow for any shorter greedy paths to $b_{i}$ or $c_{i}$, because \n2+2\ud835\udf16\n< 1 + \ud835\udefc and the edge to \ud835\udc4e\ud835\udc56 would not allow for any shorter greedy paths to \ud835\udc4f\ud835\udc56 or \ud835\udc50\ud835\udc56, because\n\ud835\udc67 needs an edge to \ud835\udc4f\ud835\udc56 or \ud835\udc50\ud835\udc56 either way.\n\nWhen looking at the strategies of \ud835\udc66 and \ud835\udc67 pertaining to \ud835\udc4e\ud835\udc56,\ud835\udc4f\ud835\udc56 and \ud835\udc50\ud835\udc56, we again only get the four cases illustrated in Figure 11. We examine all of these possible cases and show that they cannot be part of a GE.\n\n\ud835\udc4e\n\ud835\udc4f\n\ud835\udc50\n\ud835\udc4e\n\ud835\udc4f\n\ud835\udc50\n\ud835\udc4e\n\ud835\udc4f\n\ud835\udc50\n\ud835\udc4e\n\ud835\udc4f\n\ud835\udc50\n\nCase 1: In Figure 11a, if \ud835\udc66 adds an edge to \ud835\udc4f, the stretch to \ud835\udc4f decreases from \ud835\udc51 (\ud835\udc66,\ud835\udc4e)+\ud835\udc51 (\ud835\udc4e,\ud835\udc4f)\n\ud835\udc51 (\ud835\udc66,\ud835\udc4f)\n= 3.1\n2\u2212\ud835\udf16\nto 1 and the stretch to \ud835\udc50 from \ud835\udc51 (\ud835\udc66,\ud835\udc67)+\ud835\udc51 (\ud835\udc67,\ud835\udc4f)+\ud835\udc51 (\ud835\udc4f,\ud835\udc50)\n\ud835\udc51 (\ud835\udc66,\ud835\udc50)\n= 4\u22122\ud835\udf16\n2+2\ud835\udf16 to \ud835\udc51 (\ud835\udc66,\ud835\udc4f)+\ud835\udc51 (\ud835\udc4f,\ud835\udc50)\n\ud835\udc51 (\ud835\udc66,\ud835\udc50)\n=\n3\u2212\ud835\udf16\n2+2\ud835\udf16 , which is a total improvement of more than \ud835\udefc.\n\nCase 2: In Figure 11b, agent \ud835\udc67 can swap its edge from \ud835\udc4f to \ud835\udc50, changing the sum of stretches by\n\ud835\udc51 (\ud835\udc67,\ud835\udc66)+\ud835\udc51 (\ud835\udc66,\ud835\udc4f)\n2\n\u2212\n3\n\ud835\udc51 (\ud835\udc67,\ud835\udc4f)\n\u2212 \ud835\udc51 (\ud835\udc67,\ud835\udc4f)+\ud835\udc51 (\ud835\udc4f,\ud835\udc50)\n\ud835\udc51 (\ud835\udc67,\ud835\udc50)\n= 3\u22123\ud835\udf16\n2+\ud835\udf16 < 0.\n\nCase 3: In Figure 11c, if \ud835\udc66 removes its edge to \ud835\udc4f, the stretch to \ud835\udc50 stays unchanged at \ud835\udc51 (\ud835\udc66,\ud835\udc67)+\ud835\udc51 (\ud835\udc67,\ud835\udc50)\n\ud835\udc51 (\ud835\udc66,\ud835\udc50)\n=\n\ud835\udc51 (\ud835\udc66,\ud835\udc4f)+\ud835\udc51 (\ud835\udc4f,\ud835\udc50)\n\ud835\udc51 (\ud835\udc66,\ud835\udc50)\n, while the stretch to \ud835\udc4f increases from 1 to \ud835\udc51 (\ud835\udc66,\ud835\udc4e)+\ud835\udc51 (\ud835\udc4e,\ud835\udc4f)\n\ud835\udc51 (\ud835\udc66,\ud835\udc4f)\n= 3.1\n2\u2212\ud835\udf16 which is an increase of less than \ud835\udefc.\n\nCase 4: In Figure 11d, agent \ud835\udc67 can swap its edge from \ud835\udc50 to \ud835\udc4f, changing the sum of stretches by\n\ud835\udc51 (\ud835\udc67,\ud835\udc4f)+\ud835\udc51 (\ud835\udc4f,\ud835\udc50)\n\ud835\udc51 (\ud835\udc67,\ud835\udc50)\n\u2212 \ud835\udc51 (\ud835\udc67,\ud835\udc50)+\ud835\udc51 (\ud835\udc50,\ud835\udc4f)\n\ud835\udc51 (\ud835\udc67,\ud835\udc4f)\n=\n3\n2+\ud835\udf16 \u2212 3+\ud835\udf16\n2\n< 0.\n\nThus, there can be no GE in this instance if there is no satisfying assignment for I.\n\nNow, let \ud835\udc34I be a assignment satisfying I. We construct a NE, as illustrated in Figure 12.\n\n- Agent \ud835\udc66 builds edges to \ud835\udc67 and every \ud835\udc4e\ud835\udc56 and \ud835\udc4f\ud835\udc56. - Agent \ud835\udc67 builds edges to \ud835\udc66 and every \ud835\udc61\ud835\udc62 where \ud835\udc65\ud835\udc62 is true in \ud835\udc34I and every \ud835\udc53\ud835\udc62 where \ud835\udc65\ud835\udc62 is false\nin \ud835\udc34I.\n- Agent \ud835\udc51 builds edges to every \ud835\udc4e\ud835\udc56,\ud835\udc4f\ud835\udc56,\ud835\udc50\ud835\udc56,\ud835\udc61\ud835\udc62 and \ud835\udc53\ud835\udc62. - Every \ud835\udc4e\ud835\udc56 build edges to *\ud835\udc51,\ud835\udc66* and its corresponding \ud835\udc4f\ud835\udc56. - Every \ud835\udc4f\ud835\udc56 build edges to \ud835\udc51 and its corresponding \ud835\udc4e\ud835\udc56 and \ud835\udc50\ud835\udc56.\n- Every \ud835\udc50\ud835\udc56 build edges to *\ud835\udc51,\ud835\udc67*, its corresponding \ud835\udc4f\ud835\udc56 and every \ud835\udc61\ud835\udc62 and \ud835\udc53\ud835\udc62 at distance 1.6 \u2212 \ud835\udf16.\n- Every \ud835\udc61\ud835\udc62 and \ud835\udc53\ud835\udc62 builds edges to *\ud835\udc51,\ud835\udc67*, its corresponding \ud835\udc53\ud835\udc62 or \ud835\udc61\ud835\udc62 and every \ud835\udc50\ud835\udc56 at distance 1.6\u2212\ud835\udf16.\nWe show that no agent has an incentive to change their strategy:\nAgent \ud835\udc66: As noted above, the edges to \ud835\udc67 and any \ud835\udc4e\ud835\udc56 cannot be removed and the edges to any\n\ud835\udc50\ud835\udc56 cannot be added. Thus, the only possible improving changes are dropping the edge to some \ud835\udc4f\ud835\udc56, adding an edge to \ud835\udc51 or adding an edge to some \ud835\udc61\ud835\udc62 or \ud835\udc53\ud835\udc62 that \ud835\udc67 does not have an edge to. Dropping an edge to a \ud835\udc4f\ud835\udc56 would increase stretches by \ud835\udc51 (\ud835\udc66,\ud835\udc4e)+\ud835\udc51 (\ud835\udc4e,\ud835\udc4f\ud835\udc56 )\n\ud835\udc51 (\ud835\udc66,\ud835\udc4f\ud835\udc56 )\n\u2212 1 + \ud835\udc51 (\ud835\udc66,\ud835\udc4e)+\ud835\udc51 (\ud835\udc4e,\ud835\udc4f\ud835\udc56 )+\ud835\udc51 (\ud835\udc4f\ud835\udc56,\ud835\udc50\ud835\udc56 )\n\ud835\udc51 (\ud835\udc66,\ud835\udc50\ud835\udc56 )\n\u2212 \ud835\udc51 (\ud835\udc66,\ud835\udc4f\ud835\udc56 )+\ud835\udc51 (\ud835\udc4f\ud835\udc56,\ud835\udc50\ud835\udc56 )\n\ud835\udc51 (\ud835\udc66,\ud835\udc50\ud835\udc56 )\n=\n3.1\n2\u2212\ud835\udf16 \u2212 1 +\n4.1\n2+2\ud835\udf16 \u2212 3\u2212\ud835\udf16\n2+2\ud835\udf16 < \ud835\udefc. Adding an edge to a \ud835\udc61\ud835\udc62 or \ud835\udc53\ud835\udc62 that \ud835\udc67 does not have an edge to would decrease stretches by \ud835\udc51 (\ud835\udc66,\ud835\udc67)+\ud835\udc51 (\ud835\udc67,\ud835\udc53\ud835\udc62 )+\ud835\udc51 (\ud835\udc53\ud835\udc62,\ud835\udc61\ud835\udc62 )\n\ud835\udc51 (\ud835\udc66,\ud835\udc61\ud835\udc62 )\n\u2212 1 = 3.45\u22122\ud835\udf16\n2.6\u22122\ud835\udf16 \u2212 1 < \ud835\udefc. Since both of these effects are independent, doing both would not be an improving move either. Adding an edge to \ud835\udc51 would not decrease the stretch to any node even in combination with another change.\n\nAgent \ud835\udc67: As noted above, the edge to \ud835\udc66 cannot be removed. For every \ud835\udc50\ud835\udc56, \ud835\udc67 has an edge to a \ud835\udc61\ud835\udc62 or\n\ud835\udc53\ud835\udc62 at distance 1.6 \u2212 \ud835\udf16 because \ud835\udc34I is a satisfying assignment. Since \ud835\udc67 has to have an edge to exactly one of \ud835\udc61\ud835\udc62 and \ud835\udc53\ud835\udc62 for each \ud835\udc62, adding or removing edges to any \ud835\udc61\ud835\udc62 or \ud835\udc53\ud835\udc62 cannot be an improving move either. Swapping an edge between a corresponding \ud835\udc61\ud835\udc62 and \ud835\udc53\ud835\udc62 only swaps their stretches and can not decrease any other stretches. The stretch to \ud835\udc51 is already 1 and an edge to it cannot be part of any other shorter greedy paths either. Thus, the only possible improving changes are adding an edge to some \ud835\udc4e\ud835\udc56,\ud835\udc4f\ud835\udc56 or \ud835\udc50\ud835\udc56. Since all of these moves just add edges, if none of these is an improving move individually, a combination of them cannot be an improving move either. Adding an edge to some\n\ud835\udc4e\ud835\udc56 would decrease stretches by \ud835\udc51 (\ud835\udc67,\ud835\udc66)+\ud835\udc51 (\ud835\udc66,\ud835\udc4e\ud835\udc56 )\n2+2\ud835\udf16\n\u2212 1 < \ud835\udefc. Adding an edge to some \ud835\udc4f\ud835\udc56 would\n\ud835\udc51 (\ud835\udc67,\ud835\udc4e\ud835\udc56 )\n\u2212 1 = 2.96\u22122\ud835\udf16\ndecrease stretches by \ud835\udc51 (\ud835\udc67,\ud835\udc66)+\ud835\udc51 (\ud835\udc66,\ud835\udc4f)\n2\n\u2212 1 + 3.2\u2212\ud835\udf16\n\ud835\udc51 (\ud835\udc67,\ud835\udc4f)\n\u2212 1 + \ud835\udc51 (\ud835\udc67,\ud835\udc61\ud835\udc62 )+\ud835\udc51 (\ud835\udc61\ud835\udc62,\ud835\udc50\ud835\udc56 )\n2+\ud835\udf16 < \ud835\udefc.\n\n\ud835\udc51 (\ud835\udc67,\ud835\udc50\ud835\udc56 )\n\u2212 \ud835\udc51 (\ud835\udc67,\ud835\udc4f\ud835\udc56 )+\ud835\udc51 (\ud835\udc4f\ud835\udc56,\ud835\udc50\ud835\udc56 )\n\ud835\udc51 (\ud835\udc67,\ud835\udc50\ud835\udc56 )\n= 3\u22123\ud835\udf16\n2+\ud835\udf16 \u2212\n3\nAdding an edge to some \ud835\udc50\ud835\udc56 would decrease stretches by \ud835\udc51 (\ud835\udc67,\ud835\udc61\ud835\udc62 )+\ud835\udc51 (\ud835\udc61\ud835\udc62,\ud835\udc50\ud835\udc56 )\n\ud835\udc51 (\ud835\udc67,\ud835\udc50\ud835\udc56 )\n\u2212 1 = 3.2\u2212\ud835\udf16\n2+\ud835\udf16 \u2212 1 < \ud835\udefc.\n\nAgent \ud835\udc51: Dropping any edge would increase the stretch to that node by more than \ud835\udefc because the distance between any two nodes and thus the increase in distance if \ud835\udc51 would drop an edge is more than 1.3\ud835\udefc = 0.78. The stretch to \ud835\udc66 and \ud835\udc67 is already 1 via another node and an edge to them cannot be part of any other shorter greedy paths either. Thus, building any additional edges cannot improve costs either.\n\nAgent \ud835\udc4e\ud835\udc56: As noted above, the edges to \ud835\udc51 and any \ud835\udc4f\ud835\udc56 cannot be removed and the stretch to any node other than \ud835\udc67 is already 1 and an edge to them cannot be part of any other shorter greedy paths either. Thus, the only possible improving changes are removing the edge to \ud835\udc66 and adding one to \ud835\udc67.\n\nDoing both would change stretches by \ud835\udc51 (\ud835\udc4e\ud835\udc56,\ud835\udc66)+\ud835\udc51 (\ud835\udc66,\ud835\udc67)\n\ud835\udc51 (\ud835\udc4e\ud835\udc56,\ud835\udc67)\n\u2212 \ud835\udc51 (\ud835\udc4e\ud835\udc56,\ud835\udc67)+\ud835\udc51 (\ud835\udc67,\ud835\udc66)\n\ud835\udc51 (\ud835\udc4e\ud835\udc56,\ud835\udc66)\n= 2.96\u22122\ud835\udf16\n2+2\ud835\udf16\n\u2212\n3\n1.96 < 0. Dropping the edge to \ud835\udc66 would remove the only greedy path to \ud835\udc66. Adding the edge to \ud835\udc67 would decrease only the stretch to it by \ud835\udc51 (\ud835\udc4e\ud835\udc56,\ud835\udc66)+\ud835\udc51 (\ud835\udc66,\ud835\udc67)\n\ud835\udc51 (\ud835\udc4e\ud835\udc56,\ud835\udc67)\n\u2212 1 = 2.96\u22122\ud835\udf16\n2+2\ud835\udf16\n\u2212 1 < \ud835\udefc.\n\nAgent \ud835\udc4f\ud835\udc56: As noted above, the edges to \ud835\udc51 and any \ud835\udc4e\ud835\udc56 and \ud835\udc50\ud835\udc56 cannot be removed and the stretch to any node other than \ud835\udc66 and \ud835\udc67 is already 1 and an edge to them cannot be part of any other shorter greedy paths either. Thus, the only possible improving changes are adding edges to \ud835\udc66 or \ud835\udc67.\n\nAdding the edge to \ud835\udc66 would decrease stretches by \ud835\udc51 (\ud835\udc4f\ud835\udc56,\ud835\udc4e\ud835\udc56 )+\ud835\udc51 (\ud835\udc4e\ud835\udc56,\ud835\udc66)\n\ud835\udc51 (\ud835\udc4f\ud835\udc56,\ud835\udc66)\n\u22121+ \ud835\udc51 (\ud835\udc4f\ud835\udc56,\ud835\udc50\ud835\udc56 )+\ud835\udc51 (\ud835\udc50\ud835\udc56,\ud835\udc67)\n\ud835\udc51 (\ud835\udc4f\ud835\udc56,\ud835\udc67)\n\u2212 \ud835\udc51 (\ud835\udc4f\ud835\udc56,\ud835\udc66)+\ud835\udc51 (\ud835\udc66,\ud835\udc67)\n\ud835\udc51 (\ud835\udc4f\ud835\udc56,\ud835\udc67)\n=\n2\n< \ud835\udefc. Adding the edge to \ud835\udc67 would decrease stretches by \ud835\udc51 (\ud835\udc4f\ud835\udc56,\ud835\udc4e\ud835\udc56 )+\ud835\udc51 (\ud835\udc4e\ud835\udc56,\ud835\udc66)\n2\n\u2212 3\u22123\ud835\udf16\n\ud835\udc51 (\ud835\udc4f\ud835\udc56,\ud835\udc66)\n\u2212\n3.1\n2\u2212\ud835\udf16 \u2212 1 + 3+\ud835\udf16\n\ud835\udc51 (\ud835\udc4f\ud835\udc56,\ud835\udc67)+\ud835\udc51 (\ud835\udc67,\ud835\udc66)\n\ud835\udc51 (\ud835\udc4f\ud835\udc56,\ud835\udc66)\n+ \ud835\udc51 (\ud835\udc4f\ud835\udc56,\ud835\udc50\ud835\udc56 )+\ud835\udc51 (\ud835\udc50\ud835\udc56,\ud835\udc67)\n\n\ud835\udc51 (\ud835\udc4f\ud835\udc56,\ud835\udc67)\n          \u2212 1 =\n                 3.1\n                 2\u2212\ud835\udf16 \u2212 3\u22122\ud835\udf16\n\n2\u2212\ud835\udf16 + 3+\ud835\udf16\n\n                                                           2 \u2212 1 < \ud835\udefc. Since both of these moves just add\nedges and neither of them is an improving move individually, a combination of them cannot be an\nimproving move either.\n  Agent \ud835\udc50\ud835\udc56: As noted above, the edge to \ud835\udc4f\ud835\udc56 and \ud835\udc51 cannot be removed and the stretch to any\nnode other than \ud835\udc66 is already 1 and an edge to them cannot be part of any other shorter greedy\npaths either. Furthermore, if \ud835\udc50\ud835\udc56 were to remove any of the edges to some \ud835\udc61\ud835\udc62 or \ud835\udc53\ud835\udc62, the lowest\npossible stretch to them even with additional edges elsewhere, would be \ud835\udc51 (\ud835\udc50\ud835\udc56,\ud835\udc51)+\ud835\udc51 (\ud835\udc51,\ud835\udc61\ud835\udc62 )\n\n\ud835\udc51 (\ud835\udc50\ud835\udc56,\ud835\udc61\ud835\udc62 )\n          =\n              2.6\n\n                                                                                                            1.6\u2212\ud835\udf16 >\n1 + \ud835\udefc and thus including these edges would always be a better response. Thus, the only possible\nimproving changes are dropping the edge to \ud835\udc67 and adding one to \ud835\udc66. Doing both would change\nstretches by \ud835\udc51 (\ud835\udc50\ud835\udc56,\ud835\udc67)+\ud835\udc51 (\ud835\udc67,\ud835\udc66)\n\n\ud835\udc51 (\ud835\udc50\ud835\udc56,\ud835\udc66)\n         \u2212 \ud835\udc51 (\ud835\udc50\ud835\udc56,\ud835\udc66)+\ud835\udc51 (\ud835\udc66,\ud835\udc67)\n\n\ud835\udc51 (\ud835\udc50\ud835\udc56,\ud835\udc67)\n          = 3\u2212\ud835\udf16\n\n2+\ud835\udf16 < 0. Adding the edge to \ud835\udc66 would decrease\n\n2+2\ud835\udf16 \u2212\n         3\n\nstretches by \ud835\udc51 (\ud835\udc50\ud835\udc56,\ud835\udc67)+\ud835\udc51 (\ud835\udc67,\ud835\udc66)\n\n\ud835\udc51 (\ud835\udc50\ud835\udc56,\ud835\udc66)\n         \u2212 1 = 3\u2212\ud835\udf16\n\n$\\frac{3-\\epsilon}{2+2\\epsilon}-1<\\alpha.$ Dropping the edge to $z$ would increase stretches by ${}_{i})+d(a_{i},y)\\qquad d(c_{i},z)+d(z,y)\\ =\\ \\frac{3,2-\\epsilon}{2,2-\\epsilon}-1+\\frac{4,1}{2,2-\\epsilon}\\ >\\ \\sigma.$\n\n\ud835\udc51 (\ud835\udc50\ud835\udc56,\ud835\udc61\ud835\udc62 )+\ud835\udc51 (\ud835\udc61\ud835\udc62,\ud835\udc67)\n\n\ud835\udc51 (\ud835\udc50\ud835\udc56,\ud835\udc67)\n          \u2212 1 + \ud835\udc51 (\ud835\udc50\ud835\udc56,\ud835\udc4f\ud835\udc56 )+\ud835\udc51 (\ud835\udc4f\ud835\udc56,\ud835\udc4e\ud835\udc56 )+\ud835\udc51 (\ud835\udc4e\ud835\udc56,\ud835\udc66)\n\n$\\frac{d(c_{s}t_{n})+d(t_{n}x)}{A\\mathbf{g}}-1+\\frac{d(c_{s}b_{s})+d(b_{s}a_{s})+d(a_{s}y)}{A\\mathbf{g}}-\\frac{d(c_{s}x)+d(x,y)}{A\\mathbf{g}}=\\frac{3-x}{2+x}-1+\\frac{41}{3+x}-\\frac{3-x}{2+x}>a$.\n\n**Agents $t_{n}$ and $t_{s}$**. As noted above, the edge to $f_{n}/t_{n}$ and $d$ cannot be removed and the stretch to any node is already $1$ and an edge to them cannot be part of any other shorter greedy paths either. Furthermore, analogously to the edges from some $c_{i}$ to some $t_{n}$ or $f_{n^{\\prime}}$, the edges to any $c_{i}$ cannot be removed either. Thus, the only possible improving change is dropping the edge to $z$. Doing so would remove their only greedy path to $z$ however.\n\nThus, there exists a NE if and only if there is a satisfying assignment for $\\mathcal{I}$ and there also exists a GE if and only if there is a satisfying assignment for $\\mathcal{I}$. Hence, 3-SAT is reducible to our problems in polynomial time. Thus, they are NP-hard.\n\nApproximate Equilibria. We consider the complete graph as approximate NE. The result that we give is the only one that does not depend linearly on \ud835\udc5b or on the distances given by the metric.\n\nTheorem 5.2. Every instance of our game has a (\ud835\udefc + 1)-approximate NE.\n\nProof. Consider the complete graph on P. The cost of every agent is (\ud835\udefc + 1)(\ud835\udc5b \u2212 1) because every agent builds \ud835\udc5b \u2212 1 edges and the stretch to every other node is 1. Since the stretch to any other agent cannot be less than 1, the best response of an agent has costs of at least \ud835\udc5b \u2212 1. Thus, the complete graph constitutes a (\ud835\udefc + 1)-approximate NE.\n\n\u25a1\n6\nCONCLUSION\nWe give the first game-theoretic network formation model that focuses on creating networks where all-pairs greedy routing is enabled. We believe that this is only the first step to further models that guarantee even more favorable properties to hold in the created networks. For example, guaranteed maximum stretch and robustness aspects. Another avenue for further research is to consider different edge price functions. While we have considered that every edge costs a uniform price of \ud835\udefc, recent work has also considered that the price of edges could depend on the length of the created edge [7]. Finally, it is interesting to explore other techniques for constructing approximate Nash equilibria in the Euclidean setting. We believe, that it might be possible to achieve a better approximation ratio by this.\n"
    },
    {
        "level": "##",
        "title": "References",
        "content": "\n[1] Mohammad Abam and Mahnaz Qafari. 2019. Geometric Spanner Games. *Theoretical Computer Science* 795 (2019).\nhttps://doi.org/10.1016/j.tcs.2019.07.020\n[2] Anna Adamaszek, Matthias Mnich, and Katarzyna Paluch. 2018. New Approximation Algorithms for (1,2)-TSP. In\nICALP'18. 9:1\u20139:14. https://doi.org/10.4230/LIPIcs.ICALP.2018.9\n[3] Hugo A. Akitaya, Ahmad Biniaz, and Prosenjit Bose. 2022. On the Spanning and Routing Ratios of the Directed\n\u03986-graph. *Computational Geometry* 105\u2013106 (2022), 101881. https://doi.org/10.1016/j.comgeo.2022.101881\n[4] Noga Alon, Erik D. Demaine, Mohammad Taghi Hajiaghayi, and Tom Leighton. 2013. Basic Network Creation Games.\nSIAM J. Discret. Math. 27, 2 (2013), 656\u2013668. https://doi.org/10.1137/090771478\n[5] Carme \u00c0lvarez and Arnau Messegu\u00e9 Buisan. 2023. On the PoA Conjecture: Trees versus Biconnected Components.\nSIAM J. Discret. Math. 37, 2 (2023), 1030\u20131052. https://doi.org/10.1137/21M1466426\n[6] Davide Bil\u00f2, Tobias Friedrich, Pascal Lenzner, Stefanie Lowski, and Anna Melnichenko. 2021. Selfish Creation of Social\nNetworks. In *AAAI'21*. 5185\u20135193. https://doi.org/10.1609/AAAI.V35I6.16655\n[7] Davide Bil\u00f2, Tobias Friedrich, Pascal Lenzner, and Anna Melnichenko. 2019. Geometric Network Creation Games. In\nSPAA '19. 323\u2013332. https://doi.org/10.1145/3323165.3323199\n[8] Davide Bil\u00f2, Luciano Gual\u00e0, Stefano Leucci, and Guido Proietti. 2016. Locality-Based Network Creation Games. ACM\nTrans. Parallel Comput. 3, 1 (2016), 6:1\u20136:26. https://doi.org/10.1145/2938426\n[9] Davide Bil\u00f2, Luciano Gual\u00e0, and Guido Proietti. 2015. Bounded-Distance Network Creation Games. ACM Trans.\nEconomics and Comput. 3, 3 (2015), 16:1\u201316:20. https://doi.org/10.1145/2770639\n[10] Thomas Bl\u00e4sius, Tobias Friedrich, Maximilian Katzmann, and Anton Krohmer. 2020. Hyperbolic Embeddings for Near-\nOptimal Greedy Routing. *ACM Journal on Experimental Algorithmics* 25 (2020), 1\u201318. https://doi.org/10.1145/3381751\n[11] Thomas Bl\u00e4sius, Tobias Friedrich, Maximilian Katzmann, and Daniel Stephan. [n. d.]. Strongly Hyperbolic Unit Disk\nGraphs. In *STACS'23*. 13:1\u201313:17. https://doi.org/10.4230/LIPICS.STACS.2023.13\n[12] Mari\u00e1n Bogun\u00e1, Fragkiskos Papadopoulos, and Dmitri Krioukov. 2010. Sustaining the internet with hyperbolic\nmapping. *Nature communications* 1, 1 (2010), 62.\n[13] Prosenjit Bose, Jean-Lou De Carufel, Pat Morin, Andr\u00e9 van Renssen, and Sander Verdonschot. 2016. Towards Tight\nBounds on Theta-Graphs: More Is Not Always Better. *Theoretical Computer Science* 616 (2016), 70\u201393.\nhttps:\n//doi.org/10.1016/j.tcs.2015.12.017\n[14] Karl Bringmann, Ralph Keusch, Johannes Lengler, Yannic Maus, and Anisur Rahaman Molla. 2017. Greedy Routing\nand the Algorithmic Small-World Phenomenon. In *PODC'17*. 371\u2013380. https://doi.org/10.1145/3087801.3087829\n[15] Ankit Chauhan, Pascal Lenzner, Anna Melnichenko, and Louise Molitor. 2017. Selfish Network Creation with Nonuniform Edge Cost. In *SAGT'17*. 160\u2013172. https://doi.org/10.1007/978-3-319-66700-3_13\n[16] Ankit Chauhan, Pascal Lenzner, Anna Melnichenko, and Martin M\u00fcnn. 2016. On Selfish Creation of Robust Networks.\nIn *SAGT'16*. 141\u2013152. https://doi.org/10.1007/978-3-662-53354-3_12\n[17] Vasek Chv\u00e1tal. 1979. A Greedy Heuristic for the Set-Covering Problem. *Math. Oper. Res.* 4, 3 (1979), 233\u2013235.\nhttps://doi.org/10.1287/MOOR.4.3.233\n[18] K. Clarkson. 1987. Approximation Algorithms for Shortest Path Motion Planning. In *STOC '87*. 56\u201365.\nhttps:\n//doi.org/10.1145/28395.28402\n[19] Jacomo Corbo and David C. Parkes. 2005. The price of selfish behavior in bilateral network formation. In *PODC'05*.\n99\u2013107. https://doi.org/10.1145/1073814.1073833\n[20] Andreas Cord-Landwehr, Martina H\u00fcllmann, Peter Kling, and Alexander Setzer. 2012. Basic Network Creation Games\nwith Communication Interests. In *SAGT'12*. 72\u201383. https://doi.org/10.1007/978-3-642-33996-7_7\n[21] Andreas Cord-Landwehr and Pascal Lenzner. 2015. Network Creation Games: Think Global - Act Local. In *MFCS'15*.\n248\u2013260. https://doi.org/10.1007/978-3-662-48054-0_21\n[22] Andreas Cord-Landwehr, Alexander M\u00e4cker, and Friedhelm Meyer auf der Heide. 2014. Quality of Service in Network\nCreation Games. In *WINE'14*. 423\u2013428. https://doi.org/10.1007/978-3-319-13129-0_34\n[23] Erik D. Demaine, MohammadTaghi Hajiaghayi, Hamid Mahini, and Morteza Zadimoghaddam. 2007. The Price of\nAnarchy in Network Creation Games. In *PODC '07*. 292\u2013298. https://doi.org/10.1145/1281100.1281142\n[24] Hagen Echzell, Tobias Friedrich, Pascal Lenzner, and Anna Melnichenko. 2020. Flow-Based Network Creation Games.\nIn *IJCAI'20*. 139\u2013145. https://doi.org/10.24963/IJCAI.2020/20\n[25] Shayan Ehsani, MohammadAmin Fazli, Abbas Mehrabian, Sina Sadeghian Sadeghabad, MohammadAli Safari, Morteza\nSaghafian, and Saber ShokatFadaee. 2011. On a bounded budget network creation game. In *SPAA'11*. 207\u2013214.\nhttps://doi.org/10.1145/1989493.1989523\n[26] Stephan Eidenbenz, V. S. Anil Kumar, and Sibylle Zust. 2006. Equilibria in Topology Control Games for Ad Hoc\nNetworks. *Mobile Networks and Applications* 11, 2 (2006), 143\u2013159. https://doi.org/10.1007/s11036-005-4468-y\n[27] Alex Fabrikant, Ankur Luthra, Elitza Maneva, Christos Papadimitriou, and Scott Shenker. 2003. On a Network Creation\nGame. In *PODC'03*. 347\u2013351. https://doi.org/10.1145/872035.872088\n[28] Wilhelm Friedemann, Tobias Friedrich, Hans Gawendowicz, Pascal Lenzner, Anna Melnichenko, Jannik Peters, Daniel\nStephan, and Michael Vaichenker. 2021. Efficiency and Stability in Euclidean Network Design. In *SPAA '21*. 232\u2013242.\nhttps://doi.org/10.1145/3409964.3461807\n[29] Tobias Friedrich, Hans Gawendowicz, Pascal Lenzner, and Arthur Zahn. 2023. The Impact of Cooperation in Bilateral\nNetwork Creation. In *PODC'23*. 321\u2013331. https://doi.org/10.1145/3583668.3594588\n[30] Yumin Fu. 1968. Dominating set and converse dominating set of a directed graph. The American Mathematical Monthly\n75, 8 (1968), 861\u2013863.\n[31] Michael R. Garey and David S. Johnson. 1979. *Computers and Intractability: A Guide to the Theory of NP-Completeness*.\n[32] Andr\u00e1s Guly\u00e1s, J\u00f3zsef J. B\u00edr\u00f3, Attila K\u0151r\u00f6si, G\u00e1bor R\u00e9tv\u00e1ri, and Dmitri Krioukov. 2015. Navigable Networks as Nash\nEquilibria of Navigation Games. *Nature Communications* 6, 1 (2015), 7651. https://doi.org/10.1038/ncomms8651\n[33] Christos Kaklamanis, Panagiotis Kanellopoulos, and Sophia Tsokana. 2018. On network formation games with\nheterogeneous players and basic network creation games. *Theor. Comput. Sci.* 717 (2018), 62\u201372. https://doi.org/10.\n1016/J.TCS.2017.03.041\n[34] Richard M. Karp. 1972. *Reducibility among Combinatorial Problems*. 85\u2013103. https://doi.org/10.1007/978-1-4684-2001-\n2_9\n[35] Bernd Kawald and Pascal Lenzner. 2013. On dynamics in selfish network creation. In *SPAA '13*. 83\u201392.\nhttps:\n//doi.org/10.1145/2486159.2486185\n[36] J. Mark Keil. 1988. Approximating the Complete Euclidean Graph. In *SWAT 88*. 208\u2013213. https://doi.org/10.1007/3-\n540-19487-8_23\n[37] Nikolaos Laoutaris, Laura J. Poplawski, Rajmohan Rajaraman, Ravi Sundaram, and Shang-Hua Teng. 2008. Bounded\nbudget connection (BBC) games or how to make friends and influence people, on a budget. In *PODC'08*. 165\u2013174.\nhttps://doi.org/10.1145/1400751.1400774\n[38] Pascal Lenzner. 2012. Greedy Selfish Network Creation. In *WINE'12*. 142\u2013155. https://doi.org/10.1007/978-3-642-\n35311-6_11\n[39] Eli A. Meirom, Shie Mannor, and Ariel Orda. 2014. Network formation games with heterogeneous players and the\ninternet structure. In *EC'14*. 735\u2013752. https://doi.org/10.1145/2600057.2602862\n[40] Eli A. Meirom, Shie Mannor, and Ariel Orda. 2015. Formation games of reliable networks. In *INFOCOM'15*. 1760\u20131768.\nhttps://doi.org/10.1109/INFOCOM.2015.7218557\n[41] Mat\u00fas Mihal\u00e1k and Jan Christoph Schlegel. 2012. Asymmetric Swap-Equilibrium: A Unifying Equilibrium Concept for\nNetwork Creation Games. In *MFCS'12*. 693\u2013704. https://doi.org/10.1007/978-3-642-32589-2_60\n[42] Dov Monderer and Lloyd S Shapley. 1996. Potential games. *Games and economic behavior* 14, 1 (1996), 124\u2013143.\n[43] Thomas Moscibroda, Stefan Schmid, and Rogert Wattenhofer. 2006. On the Topologies Formed by Selfish Peers. In\nPODC '06. 133\u2013142. https://doi.org/10.1145/1146381.1146403\n[44] Giri Narasimhan and Michiel Smid. 2007. *Geometric Spanner Networks*. Cambridge University Press. https://doi.org/\n10.1017/cbo9780511546884\n[45] Christos H. Papadimitriou. 2001. Algorithms, games, and the internet. In *STOC'01*. 749\u2013753. https://doi.org/10.1145/\n380752.380883\n[46] Jim Ruppert and Raimung Seidel. 1991. Approximating the D-Dimensional Complete Euclidean Graph. In 3rd Canadian\nConference on Computational Geometry.\n[47] Craig A. Tovey. 1984. A Simplified NP-complete Satisfiability Problem. *Discrete Applied Mathematics* 8, 1 (1984), 85\u201389.\nhttps://doi.org/10.1016/0166-218X(84)90081-7"
    }
]